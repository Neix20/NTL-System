//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NtlSystem.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class dbNtlSystemEntities : DbContext
    {
        public dbNtlSystemEntities()
            : base("name=dbNtlSystemEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<TNtlAttribute> TNtlAttributes { get; set; }
        public virtual DbSet<TNtlAttributeValue> TNtlAttributeValues { get; set; }
        public virtual DbSet<TNtlCarrier> TNtlCarriers { get; set; }
        public virtual DbSet<TNtlCustomer> TNtlCustomers { get; set; }
        public virtual DbSet<TNtlDetail> TNtlDetails { get; set; }
        public virtual DbSet<TNtlInvoice> TNtlInvoices { get; set; }
        public virtual DbSet<TNtlJobBatch> TNtlJobBatches { get; set; }
        public virtual DbSet<TNtlJobOrderItem> TNtlJobOrderItems { get; set; }
        public virtual DbSet<TNtlPaymentMethod> TNtlPaymentMethods { get; set; }
        public virtual DbSet<TNtlPermission> TNtlPermissions { get; set; }
        public virtual DbSet<TNtlPlatform> TNtlPlatforms { get; set; }
        public virtual DbSet<TNtlProduct> TNtlProducts { get; set; }
        public virtual DbSet<TNtlProductAttributeValue> TNtlProductAttributeValues { get; set; }
        public virtual DbSet<TNtlProductCategory> TNtlProductCategories { get; set; }
        public virtual DbSet<TNtlProductComponent> TNtlProductComponents { get; set; }
        public virtual DbSet<TNtlProduction> TNtlProductions { get; set; }
        public virtual DbSet<TNtlProductionItem> TNtlProductionItems { get; set; }
        public virtual DbSet<TNtlProductSubCategory> TNtlProductSubCategories { get; set; }
        public virtual DbSet<TNtlRole> TNtlRoles { get; set; }
        public virtual DbSet<TNtlRolePermission> TNtlRolePermissions { get; set; }
        public virtual DbSet<TNtlSeleniumLog> TNtlSeleniumLogs { get; set; }
        public virtual DbSet<TNtlShipment> TNtlShipments { get; set; }
        public virtual DbSet<TNtlStockItem> TNtlStockItems { get; set; }
        public virtual DbSet<TNtlStockWarehouse> TNtlStockWarehouses { get; set; }
        public virtual DbSet<TNtlSupplierShipment> TNtlSupplierShipments { get; set; }
        public virtual DbSet<TNtlUom> TNtlUoms { get; set; }
        public virtual DbSet<TNtlUser> TNtlUsers { get; set; }
        public virtual DbSet<TNtlUserRole> TNtlUserRoles { get; set; }
        public virtual DbSet<TNtlStatu> TNtlStatus { get; set; }
        public virtual DbSet<TNtlCustomerChat> TNtlCustomerChats { get; set; }
        public virtual DbSet<TNtlJobOrder> TNtlJobOrders { get; set; }
        public virtual DbSet<TNtlOrder> TNtlOrders { get; set; }
        public virtual DbSet<TNtlUnitType> TNtlUnitTypes { get; set; }
        public virtual DbSet<TNtlWindow> TNtlWindows { get; set; }
        public virtual DbSet<TNtlWindowUnit> TNtlWindowUnits { get; set; }
        public virtual DbSet<TNtlUnit> TNtlUnits { get; set; }
        public virtual DbSet<TNtlOrderItem> TNtlOrderItems { get; set; }
        public virtual DbSet<TNtlSummaryItem> TNtlSummaryItems { get; set; }
    
        public virtual int NSP_TNtlAttribute_Delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NSP_TNtlAttribute_Delete", idParameter);
        }
    
        public virtual int NSP_TNtlAttribute_Insert(string name, Nullable<int> detail_id)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var detail_idParameter = detail_id.HasValue ?
                new ObjectParameter("detail_id", detail_id) :
                new ObjectParameter("detail_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NSP_TNtlAttribute_Insert", nameParameter, detail_idParameter);
        }
    
        public virtual int NSP_TNtlAttribute_Update(Nullable<int> id, string name, Nullable<int> detail_id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var detail_idParameter = detail_id.HasValue ?
                new ObjectParameter("detail_id", detail_id) :
                new ObjectParameter("detail_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NSP_TNtlAttribute_Update", idParameter, nameParameter, detail_idParameter);
        }
    
        public virtual int NSP_TNtlAttributeValue_Delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NSP_TNtlAttributeValue_Delete", idParameter);
        }
    
        public virtual int NSP_TNtlAttributeValue_Insert(Nullable<int> attribute_id, string value)
        {
            var attribute_idParameter = attribute_id.HasValue ?
                new ObjectParameter("attribute_id", attribute_id) :
                new ObjectParameter("attribute_id", typeof(int));
    
            var valueParameter = value != null ?
                new ObjectParameter("value", value) :
                new ObjectParameter("value", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NSP_TNtlAttributeValue_Insert", attribute_idParameter, valueParameter);
        }
    
        public virtual int NSP_TNtlAttributeValue_Update(Nullable<int> id, Nullable<int> attribute_id, string value)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var attribute_idParameter = attribute_id.HasValue ?
                new ObjectParameter("attribute_id", attribute_id) :
                new ObjectParameter("attribute_id", typeof(int));
    
            var valueParameter = value != null ?
                new ObjectParameter("value", value) :
                new ObjectParameter("value", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NSP_TNtlAttributeValue_Update", idParameter, attribute_idParameter, valueParameter);
        }
    
        public virtual int NSP_TNtlCarrier_Delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NSP_TNtlCarrier_Delete", idParameter);
        }
    
        public virtual int NSP_TNtlCarrier_Insert(string name, Nullable<int> detail_id)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var detail_idParameter = detail_id.HasValue ?
                new ObjectParameter("detail_id", detail_id) :
                new ObjectParameter("detail_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NSP_TNtlCarrier_Insert", nameParameter, detail_idParameter);
        }
    
        public virtual int NSP_TNtlCarrier_Update(Nullable<int> id, string name, Nullable<int> detail_id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var detail_idParameter = detail_id.HasValue ?
                new ObjectParameter("detail_id", detail_id) :
                new ObjectParameter("detail_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NSP_TNtlCarrier_Update", idParameter, nameParameter, detail_idParameter);
        }
    
        public virtual int NSP_TNtlCustomer_Delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NSP_TNtlCustomer_Delete", idParameter);
        }
    
        public virtual int NSP_TNtlCustomer_Insert(string name, string email_address, string phone_number, string address, Nullable<int> platform_id, Nullable<int> detail_id)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var email_addressParameter = email_address != null ?
                new ObjectParameter("email_address", email_address) :
                new ObjectParameter("email_address", typeof(string));
    
            var phone_numberParameter = phone_number != null ?
                new ObjectParameter("phone_number", phone_number) :
                new ObjectParameter("phone_number", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("address", address) :
                new ObjectParameter("address", typeof(string));
    
            var platform_idParameter = platform_id.HasValue ?
                new ObjectParameter("platform_id", platform_id) :
                new ObjectParameter("platform_id", typeof(int));
    
            var detail_idParameter = detail_id.HasValue ?
                new ObjectParameter("detail_id", detail_id) :
                new ObjectParameter("detail_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NSP_TNtlCustomer_Insert", nameParameter, email_addressParameter, phone_numberParameter, addressParameter, platform_idParameter, detail_idParameter);
        }
    
        public virtual int NSP_TNtlCustomer_Update(Nullable<int> id, string name, string email_address, string phone_number, string address, Nullable<int> platform_id, Nullable<int> detail_id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var email_addressParameter = email_address != null ?
                new ObjectParameter("email_address", email_address) :
                new ObjectParameter("email_address", typeof(string));
    
            var phone_numberParameter = phone_number != null ?
                new ObjectParameter("phone_number", phone_number) :
                new ObjectParameter("phone_number", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("address", address) :
                new ObjectParameter("address", typeof(string));
    
            var platform_idParameter = platform_id.HasValue ?
                new ObjectParameter("platform_id", platform_id) :
                new ObjectParameter("platform_id", typeof(int));
    
            var detail_idParameter = detail_id.HasValue ?
                new ObjectParameter("detail_id", detail_id) :
                new ObjectParameter("detail_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NSP_TNtlCustomer_Update", idParameter, nameParameter, email_addressParameter, phone_numberParameter, addressParameter, platform_idParameter, detail_idParameter);
        }
    
        public virtual int NSP_TNtlDetail_Delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NSP_TNtlDetail_Delete", idParameter);
        }
    
        public virtual int NSP_TNtlDetail_Insert(string name, string remark, string created_by, Nullable<System.DateTime> created_date, string last_updated_by, Nullable<System.DateTime> last_updated_date)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var remarkParameter = remark != null ?
                new ObjectParameter("remark", remark) :
                new ObjectParameter("remark", typeof(string));
    
            var created_byParameter = created_by != null ?
                new ObjectParameter("created_by", created_by) :
                new ObjectParameter("created_by", typeof(string));
    
            var created_dateParameter = created_date.HasValue ?
                new ObjectParameter("created_date", created_date) :
                new ObjectParameter("created_date", typeof(System.DateTime));
    
            var last_updated_byParameter = last_updated_by != null ?
                new ObjectParameter("last_updated_by", last_updated_by) :
                new ObjectParameter("last_updated_by", typeof(string));
    
            var last_updated_dateParameter = last_updated_date.HasValue ?
                new ObjectParameter("last_updated_date", last_updated_date) :
                new ObjectParameter("last_updated_date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NSP_TNtlDetail_Insert", nameParameter, remarkParameter, created_byParameter, created_dateParameter, last_updated_byParameter, last_updated_dateParameter);
        }
    
        public virtual int NSP_TNtlDetail_Update(Nullable<int> id, string name, string remark, string created_by, Nullable<System.DateTime> created_date, string last_updated_by, Nullable<System.DateTime> last_updated_date)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var remarkParameter = remark != null ?
                new ObjectParameter("remark", remark) :
                new ObjectParameter("remark", typeof(string));
    
            var created_byParameter = created_by != null ?
                new ObjectParameter("created_by", created_by) :
                new ObjectParameter("created_by", typeof(string));
    
            var created_dateParameter = created_date.HasValue ?
                new ObjectParameter("created_date", created_date) :
                new ObjectParameter("created_date", typeof(System.DateTime));
    
            var last_updated_byParameter = last_updated_by != null ?
                new ObjectParameter("last_updated_by", last_updated_by) :
                new ObjectParameter("last_updated_by", typeof(string));
    
            var last_updated_dateParameter = last_updated_date.HasValue ?
                new ObjectParameter("last_updated_date", last_updated_date) :
                new ObjectParameter("last_updated_date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NSP_TNtlDetail_Update", idParameter, nameParameter, remarkParameter, created_byParameter, created_dateParameter, last_updated_byParameter, last_updated_dateParameter);
        }
    
        public virtual int NSP_TNtlInvoice_Delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NSP_TNtlInvoice_Delete", idParameter);
        }
    
        public virtual int NSP_TNtlInvoice_Insert(string name, string code, string details, Nullable<System.DateTime> created_date, Nullable<System.DateTime> completed_date, Nullable<decimal> shipping_fee, string customer_address_line_1, string customer_address_line_2, string customer_city, string customer_state, Nullable<int> customer_zip_code, string customer_country, Nullable<int> payment_method_id, Nullable<int> status_id, Nullable<int> customer_id, Nullable<int> order_id, string remark, Nullable<int> detail_id)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var codeParameter = code != null ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(string));
    
            var detailsParameter = details != null ?
                new ObjectParameter("details", details) :
                new ObjectParameter("details", typeof(string));
    
            var created_dateParameter = created_date.HasValue ?
                new ObjectParameter("created_date", created_date) :
                new ObjectParameter("created_date", typeof(System.DateTime));
    
            var completed_dateParameter = completed_date.HasValue ?
                new ObjectParameter("completed_date", completed_date) :
                new ObjectParameter("completed_date", typeof(System.DateTime));
    
            var shipping_feeParameter = shipping_fee.HasValue ?
                new ObjectParameter("shipping_fee", shipping_fee) :
                new ObjectParameter("shipping_fee", typeof(decimal));
    
            var customer_address_line_1Parameter = customer_address_line_1 != null ?
                new ObjectParameter("customer_address_line_1", customer_address_line_1) :
                new ObjectParameter("customer_address_line_1", typeof(string));
    
            var customer_address_line_2Parameter = customer_address_line_2 != null ?
                new ObjectParameter("customer_address_line_2", customer_address_line_2) :
                new ObjectParameter("customer_address_line_2", typeof(string));
    
            var customer_cityParameter = customer_city != null ?
                new ObjectParameter("customer_city", customer_city) :
                new ObjectParameter("customer_city", typeof(string));
    
            var customer_stateParameter = customer_state != null ?
                new ObjectParameter("customer_state", customer_state) :
                new ObjectParameter("customer_state", typeof(string));
    
            var customer_zip_codeParameter = customer_zip_code.HasValue ?
                new ObjectParameter("customer_zip_code", customer_zip_code) :
                new ObjectParameter("customer_zip_code", typeof(int));
    
            var customer_countryParameter = customer_country != null ?
                new ObjectParameter("customer_country", customer_country) :
                new ObjectParameter("customer_country", typeof(string));
    
            var payment_method_idParameter = payment_method_id.HasValue ?
                new ObjectParameter("payment_method_id", payment_method_id) :
                new ObjectParameter("payment_method_id", typeof(int));
    
            var status_idParameter = status_id.HasValue ?
                new ObjectParameter("status_id", status_id) :
                new ObjectParameter("status_id", typeof(int));
    
            var customer_idParameter = customer_id.HasValue ?
                new ObjectParameter("customer_id", customer_id) :
                new ObjectParameter("customer_id", typeof(int));
    
            var order_idParameter = order_id.HasValue ?
                new ObjectParameter("order_id", order_id) :
                new ObjectParameter("order_id", typeof(int));
    
            var remarkParameter = remark != null ?
                new ObjectParameter("remark", remark) :
                new ObjectParameter("remark", typeof(string));
    
            var detail_idParameter = detail_id.HasValue ?
                new ObjectParameter("detail_id", detail_id) :
                new ObjectParameter("detail_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NSP_TNtlInvoice_Insert", nameParameter, codeParameter, detailsParameter, created_dateParameter, completed_dateParameter, shipping_feeParameter, customer_address_line_1Parameter, customer_address_line_2Parameter, customer_cityParameter, customer_stateParameter, customer_zip_codeParameter, customer_countryParameter, payment_method_idParameter, status_idParameter, customer_idParameter, order_idParameter, remarkParameter, detail_idParameter);
        }
    
        public virtual int NSP_TNtlInvoice_Update(Nullable<int> id, string name, string code, string details, Nullable<System.DateTime> created_date, Nullable<System.DateTime> completed_date, Nullable<decimal> shipping_fee, string customer_address_line_1, string customer_address_line_2, string customer_city, string customer_state, Nullable<int> customer_zip_code, string customer_country, Nullable<int> payment_method_id, Nullable<int> status_id, Nullable<int> customer_id, Nullable<int> order_id, string remark, Nullable<int> detail_id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var codeParameter = code != null ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(string));
    
            var detailsParameter = details != null ?
                new ObjectParameter("details", details) :
                new ObjectParameter("details", typeof(string));
    
            var created_dateParameter = created_date.HasValue ?
                new ObjectParameter("created_date", created_date) :
                new ObjectParameter("created_date", typeof(System.DateTime));
    
            var completed_dateParameter = completed_date.HasValue ?
                new ObjectParameter("completed_date", completed_date) :
                new ObjectParameter("completed_date", typeof(System.DateTime));
    
            var shipping_feeParameter = shipping_fee.HasValue ?
                new ObjectParameter("shipping_fee", shipping_fee) :
                new ObjectParameter("shipping_fee", typeof(decimal));
    
            var customer_address_line_1Parameter = customer_address_line_1 != null ?
                new ObjectParameter("customer_address_line_1", customer_address_line_1) :
                new ObjectParameter("customer_address_line_1", typeof(string));
    
            var customer_address_line_2Parameter = customer_address_line_2 != null ?
                new ObjectParameter("customer_address_line_2", customer_address_line_2) :
                new ObjectParameter("customer_address_line_2", typeof(string));
    
            var customer_cityParameter = customer_city != null ?
                new ObjectParameter("customer_city", customer_city) :
                new ObjectParameter("customer_city", typeof(string));
    
            var customer_stateParameter = customer_state != null ?
                new ObjectParameter("customer_state", customer_state) :
                new ObjectParameter("customer_state", typeof(string));
    
            var customer_zip_codeParameter = customer_zip_code.HasValue ?
                new ObjectParameter("customer_zip_code", customer_zip_code) :
                new ObjectParameter("customer_zip_code", typeof(int));
    
            var customer_countryParameter = customer_country != null ?
                new ObjectParameter("customer_country", customer_country) :
                new ObjectParameter("customer_country", typeof(string));
    
            var payment_method_idParameter = payment_method_id.HasValue ?
                new ObjectParameter("payment_method_id", payment_method_id) :
                new ObjectParameter("payment_method_id", typeof(int));
    
            var status_idParameter = status_id.HasValue ?
                new ObjectParameter("status_id", status_id) :
                new ObjectParameter("status_id", typeof(int));
    
            var customer_idParameter = customer_id.HasValue ?
                new ObjectParameter("customer_id", customer_id) :
                new ObjectParameter("customer_id", typeof(int));
    
            var order_idParameter = order_id.HasValue ?
                new ObjectParameter("order_id", order_id) :
                new ObjectParameter("order_id", typeof(int));
    
            var remarkParameter = remark != null ?
                new ObjectParameter("remark", remark) :
                new ObjectParameter("remark", typeof(string));
    
            var detail_idParameter = detail_id.HasValue ?
                new ObjectParameter("detail_id", detail_id) :
                new ObjectParameter("detail_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NSP_TNtlInvoice_Update", idParameter, nameParameter, codeParameter, detailsParameter, created_dateParameter, completed_dateParameter, shipping_feeParameter, customer_address_line_1Parameter, customer_address_line_2Parameter, customer_cityParameter, customer_stateParameter, customer_zip_codeParameter, customer_countryParameter, payment_method_idParameter, status_idParameter, customer_idParameter, order_idParameter, remarkParameter, detail_idParameter);
        }
    
        public virtual int NSP_TNtlJobBatch_Delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NSP_TNtlJobBatch_Delete", idParameter);
        }
    
        public virtual int NSP_TNtlJobBatch_Insert(string name, string batch_no, Nullable<System.DateTime> created_date, Nullable<System.DateTime> completed_date, string staff_name, Nullable<int> status_id, Nullable<int> detail_id)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var batch_noParameter = batch_no != null ?
                new ObjectParameter("batch_no", batch_no) :
                new ObjectParameter("batch_no", typeof(string));
    
            var created_dateParameter = created_date.HasValue ?
                new ObjectParameter("created_date", created_date) :
                new ObjectParameter("created_date", typeof(System.DateTime));
    
            var completed_dateParameter = completed_date.HasValue ?
                new ObjectParameter("completed_date", completed_date) :
                new ObjectParameter("completed_date", typeof(System.DateTime));
    
            var staff_nameParameter = staff_name != null ?
                new ObjectParameter("staff_name", staff_name) :
                new ObjectParameter("staff_name", typeof(string));
    
            var status_idParameter = status_id.HasValue ?
                new ObjectParameter("status_id", status_id) :
                new ObjectParameter("status_id", typeof(int));
    
            var detail_idParameter = detail_id.HasValue ?
                new ObjectParameter("detail_id", detail_id) :
                new ObjectParameter("detail_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NSP_TNtlJobBatch_Insert", nameParameter, batch_noParameter, created_dateParameter, completed_dateParameter, staff_nameParameter, status_idParameter, detail_idParameter);
        }
    
        public virtual int NSP_TNtlJobBatch_Update(Nullable<int> id, string name, string batch_no, Nullable<System.DateTime> created_date, Nullable<System.DateTime> completed_date, string staff_name, Nullable<int> status_id, Nullable<int> detail_id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var batch_noParameter = batch_no != null ?
                new ObjectParameter("batch_no", batch_no) :
                new ObjectParameter("batch_no", typeof(string));
    
            var created_dateParameter = created_date.HasValue ?
                new ObjectParameter("created_date", created_date) :
                new ObjectParameter("created_date", typeof(System.DateTime));
    
            var completed_dateParameter = completed_date.HasValue ?
                new ObjectParameter("completed_date", completed_date) :
                new ObjectParameter("completed_date", typeof(System.DateTime));
    
            var staff_nameParameter = staff_name != null ?
                new ObjectParameter("staff_name", staff_name) :
                new ObjectParameter("staff_name", typeof(string));
    
            var status_idParameter = status_id.HasValue ?
                new ObjectParameter("status_id", status_id) :
                new ObjectParameter("status_id", typeof(int));
    
            var detail_idParameter = detail_id.HasValue ?
                new ObjectParameter("detail_id", detail_id) :
                new ObjectParameter("detail_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NSP_TNtlJobBatch_Update", idParameter, nameParameter, batch_noParameter, created_dateParameter, completed_dateParameter, staff_nameParameter, status_idParameter, detail_idParameter);
        }
    
        public virtual int NSP_TNtlJobOrderItem_Delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NSP_TNtlJobOrderItem_Delete", idParameter);
        }
    
        public virtual int NSP_TNtlJobOrderItem_Insert(string name, string sku, string uom, Nullable<decimal> unit_price, Nullable<decimal> quantity, Nullable<decimal> length, Nullable<decimal> width, Nullable<decimal> height, Nullable<decimal> sub_total_price, Nullable<decimal> discount_fee, Nullable<decimal> tax_price, Nullable<decimal> total_price, Nullable<int> order_id, Nullable<int> detail_id)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var skuParameter = sku != null ?
                new ObjectParameter("sku", sku) :
                new ObjectParameter("sku", typeof(string));
    
            var uomParameter = uom != null ?
                new ObjectParameter("uom", uom) :
                new ObjectParameter("uom", typeof(string));
    
            var unit_priceParameter = unit_price.HasValue ?
                new ObjectParameter("unit_price", unit_price) :
                new ObjectParameter("unit_price", typeof(decimal));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("quantity", quantity) :
                new ObjectParameter("quantity", typeof(decimal));
    
            var lengthParameter = length.HasValue ?
                new ObjectParameter("length", length) :
                new ObjectParameter("length", typeof(decimal));
    
            var widthParameter = width.HasValue ?
                new ObjectParameter("width", width) :
                new ObjectParameter("width", typeof(decimal));
    
            var heightParameter = height.HasValue ?
                new ObjectParameter("height", height) :
                new ObjectParameter("height", typeof(decimal));
    
            var sub_total_priceParameter = sub_total_price.HasValue ?
                new ObjectParameter("sub_total_price", sub_total_price) :
                new ObjectParameter("sub_total_price", typeof(decimal));
    
            var discount_feeParameter = discount_fee.HasValue ?
                new ObjectParameter("discount_fee", discount_fee) :
                new ObjectParameter("discount_fee", typeof(decimal));
    
            var tax_priceParameter = tax_price.HasValue ?
                new ObjectParameter("tax_price", tax_price) :
                new ObjectParameter("tax_price", typeof(decimal));
    
            var total_priceParameter = total_price.HasValue ?
                new ObjectParameter("total_price", total_price) :
                new ObjectParameter("total_price", typeof(decimal));
    
            var order_idParameter = order_id.HasValue ?
                new ObjectParameter("order_id", order_id) :
                new ObjectParameter("order_id", typeof(int));
    
            var detail_idParameter = detail_id.HasValue ?
                new ObjectParameter("detail_id", detail_id) :
                new ObjectParameter("detail_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NSP_TNtlJobOrderItem_Insert", nameParameter, skuParameter, uomParameter, unit_priceParameter, quantityParameter, lengthParameter, widthParameter, heightParameter, sub_total_priceParameter, discount_feeParameter, tax_priceParameter, total_priceParameter, order_idParameter, detail_idParameter);
        }
    
        public virtual int NSP_TNtlJobOrderItem_Update(Nullable<int> id, string name, string sku, string uom, Nullable<decimal> unit_price, Nullable<decimal> quantity, Nullable<decimal> length, Nullable<decimal> width, Nullable<decimal> height, Nullable<decimal> sub_total_price, Nullable<decimal> discount_fee, Nullable<decimal> tax_price, Nullable<decimal> total_price, Nullable<int> order_id, Nullable<int> detail_id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var skuParameter = sku != null ?
                new ObjectParameter("sku", sku) :
                new ObjectParameter("sku", typeof(string));
    
            var uomParameter = uom != null ?
                new ObjectParameter("uom", uom) :
                new ObjectParameter("uom", typeof(string));
    
            var unit_priceParameter = unit_price.HasValue ?
                new ObjectParameter("unit_price", unit_price) :
                new ObjectParameter("unit_price", typeof(decimal));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("quantity", quantity) :
                new ObjectParameter("quantity", typeof(decimal));
    
            var lengthParameter = length.HasValue ?
                new ObjectParameter("length", length) :
                new ObjectParameter("length", typeof(decimal));
    
            var widthParameter = width.HasValue ?
                new ObjectParameter("width", width) :
                new ObjectParameter("width", typeof(decimal));
    
            var heightParameter = height.HasValue ?
                new ObjectParameter("height", height) :
                new ObjectParameter("height", typeof(decimal));
    
            var sub_total_priceParameter = sub_total_price.HasValue ?
                new ObjectParameter("sub_total_price", sub_total_price) :
                new ObjectParameter("sub_total_price", typeof(decimal));
    
            var discount_feeParameter = discount_fee.HasValue ?
                new ObjectParameter("discount_fee", discount_fee) :
                new ObjectParameter("discount_fee", typeof(decimal));
    
            var tax_priceParameter = tax_price.HasValue ?
                new ObjectParameter("tax_price", tax_price) :
                new ObjectParameter("tax_price", typeof(decimal));
    
            var total_priceParameter = total_price.HasValue ?
                new ObjectParameter("total_price", total_price) :
                new ObjectParameter("total_price", typeof(decimal));
    
            var order_idParameter = order_id.HasValue ?
                new ObjectParameter("order_id", order_id) :
                new ObjectParameter("order_id", typeof(int));
    
            var detail_idParameter = detail_id.HasValue ?
                new ObjectParameter("detail_id", detail_id) :
                new ObjectParameter("detail_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NSP_TNtlJobOrderItem_Update", idParameter, nameParameter, skuParameter, uomParameter, unit_priceParameter, quantityParameter, lengthParameter, widthParameter, heightParameter, sub_total_priceParameter, discount_feeParameter, tax_priceParameter, total_priceParameter, order_idParameter, detail_idParameter);
        }
    
        public virtual int NSP_TNtlPaymentMethod_Delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NSP_TNtlPaymentMethod_Delete", idParameter);
        }
    
        public virtual int NSP_TNtlPaymentMethod_Insert(string name, Nullable<int> detail_id)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var detail_idParameter = detail_id.HasValue ?
                new ObjectParameter("detail_id", detail_id) :
                new ObjectParameter("detail_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NSP_TNtlPaymentMethod_Insert", nameParameter, detail_idParameter);
        }
    
        public virtual int NSP_TNtlPaymentMethod_Update(Nullable<int> id, string name, Nullable<int> detail_id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var detail_idParameter = detail_id.HasValue ?
                new ObjectParameter("detail_id", detail_id) :
                new ObjectParameter("detail_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NSP_TNtlPaymentMethod_Update", idParameter, nameParameter, detail_idParameter);
        }
    
        public virtual int NSP_TNtlPermission_Delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NSP_TNtlPermission_Delete", idParameter);
        }
    
        public virtual int NSP_TNtlPermission_Insert(string name)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NSP_TNtlPermission_Insert", nameParameter);
        }
    
        public virtual int NSP_TNtlPermission_Update(Nullable<int> id, string name)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NSP_TNtlPermission_Update", idParameter, nameParameter);
        }
    
        public virtual int NSP_TNtlPlatform_Delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NSP_TNtlPlatform_Delete", idParameter);
        }
    
        public virtual int NSP_TNtlPlatform_Insert(string name, string link, Nullable<int> detail_id)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var linkParameter = link != null ?
                new ObjectParameter("link", link) :
                new ObjectParameter("link", typeof(string));
    
            var detail_idParameter = detail_id.HasValue ?
                new ObjectParameter("detail_id", detail_id) :
                new ObjectParameter("detail_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NSP_TNtlPlatform_Insert", nameParameter, linkParameter, detail_idParameter);
        }
    
        public virtual int NSP_TNtlPlatform_Update(Nullable<int> id, string name, string link, Nullable<int> detail_id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var linkParameter = link != null ?
                new ObjectParameter("link", link) :
                new ObjectParameter("link", typeof(string));
    
            var detail_idParameter = detail_id.HasValue ?
                new ObjectParameter("detail_id", detail_id) :
                new ObjectParameter("detail_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NSP_TNtlPlatform_Update", idParameter, nameParameter, linkParameter, detail_idParameter);
        }
    
        public virtual int NSP_TNtlProduct_Delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NSP_TNtlProduct_Delete", idParameter);
        }
    
        public virtual int NSP_TNtlProduct_Insert(string name, string description, string sKU, string sKU2, Nullable<decimal> buy_price, Nullable<decimal> sell_price, Nullable<int> product_category_id, Nullable<int> product_sub_category_id, Nullable<int> uom_id, string remarks, Nullable<int> detail_id)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("description", description) :
                new ObjectParameter("description", typeof(string));
    
            var sKUParameter = sKU != null ?
                new ObjectParameter("SKU", sKU) :
                new ObjectParameter("SKU", typeof(string));
    
            var sKU2Parameter = sKU2 != null ?
                new ObjectParameter("SKU2", sKU2) :
                new ObjectParameter("SKU2", typeof(string));
    
            var buy_priceParameter = buy_price.HasValue ?
                new ObjectParameter("buy_price", buy_price) :
                new ObjectParameter("buy_price", typeof(decimal));
    
            var sell_priceParameter = sell_price.HasValue ?
                new ObjectParameter("sell_price", sell_price) :
                new ObjectParameter("sell_price", typeof(decimal));
    
            var product_category_idParameter = product_category_id.HasValue ?
                new ObjectParameter("product_category_id", product_category_id) :
                new ObjectParameter("product_category_id", typeof(int));
    
            var product_sub_category_idParameter = product_sub_category_id.HasValue ?
                new ObjectParameter("product_sub_category_id", product_sub_category_id) :
                new ObjectParameter("product_sub_category_id", typeof(int));
    
            var uom_idParameter = uom_id.HasValue ?
                new ObjectParameter("uom_id", uom_id) :
                new ObjectParameter("uom_id", typeof(int));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("remarks", remarks) :
                new ObjectParameter("remarks", typeof(string));
    
            var detail_idParameter = detail_id.HasValue ?
                new ObjectParameter("detail_id", detail_id) :
                new ObjectParameter("detail_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NSP_TNtlProduct_Insert", nameParameter, descriptionParameter, sKUParameter, sKU2Parameter, buy_priceParameter, sell_priceParameter, product_category_idParameter, product_sub_category_idParameter, uom_idParameter, remarksParameter, detail_idParameter);
        }
    
        public virtual int NSP_TNtlProduct_Update(Nullable<int> id, string name, string description, string sKU, string sKU2, Nullable<decimal> buy_price, Nullable<decimal> sell_price, Nullable<int> product_category_id, Nullable<int> product_sub_category_id, Nullable<int> uom_id, string remarks, Nullable<int> detail_id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("description", description) :
                new ObjectParameter("description", typeof(string));
    
            var sKUParameter = sKU != null ?
                new ObjectParameter("SKU", sKU) :
                new ObjectParameter("SKU", typeof(string));
    
            var sKU2Parameter = sKU2 != null ?
                new ObjectParameter("SKU2", sKU2) :
                new ObjectParameter("SKU2", typeof(string));
    
            var buy_priceParameter = buy_price.HasValue ?
                new ObjectParameter("buy_price", buy_price) :
                new ObjectParameter("buy_price", typeof(decimal));
    
            var sell_priceParameter = sell_price.HasValue ?
                new ObjectParameter("sell_price", sell_price) :
                new ObjectParameter("sell_price", typeof(decimal));
    
            var product_category_idParameter = product_category_id.HasValue ?
                new ObjectParameter("product_category_id", product_category_id) :
                new ObjectParameter("product_category_id", typeof(int));
    
            var product_sub_category_idParameter = product_sub_category_id.HasValue ?
                new ObjectParameter("product_sub_category_id", product_sub_category_id) :
                new ObjectParameter("product_sub_category_id", typeof(int));
    
            var uom_idParameter = uom_id.HasValue ?
                new ObjectParameter("uom_id", uom_id) :
                new ObjectParameter("uom_id", typeof(int));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("remarks", remarks) :
                new ObjectParameter("remarks", typeof(string));
    
            var detail_idParameter = detail_id.HasValue ?
                new ObjectParameter("detail_id", detail_id) :
                new ObjectParameter("detail_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NSP_TNtlProduct_Update", idParameter, nameParameter, descriptionParameter, sKUParameter, sKU2Parameter, buy_priceParameter, sell_priceParameter, product_category_idParameter, product_sub_category_idParameter, uom_idParameter, remarksParameter, detail_idParameter);
        }
    
        public virtual int NSP_TNtlProductAttributeValue_Delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NSP_TNtlProductAttributeValue_Delete", idParameter);
        }
    
        public virtual int NSP_TNtlProductAttributeValue_Insert(Nullable<int> product_id, Nullable<int> attribute_value_id, Nullable<int> detail_id)
        {
            var product_idParameter = product_id.HasValue ?
                new ObjectParameter("product_id", product_id) :
                new ObjectParameter("product_id", typeof(int));
    
            var attribute_value_idParameter = attribute_value_id.HasValue ?
                new ObjectParameter("attribute_value_id", attribute_value_id) :
                new ObjectParameter("attribute_value_id", typeof(int));
    
            var detail_idParameter = detail_id.HasValue ?
                new ObjectParameter("detail_id", detail_id) :
                new ObjectParameter("detail_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NSP_TNtlProductAttributeValue_Insert", product_idParameter, attribute_value_idParameter, detail_idParameter);
        }
    
        public virtual int NSP_TNtlProductAttributeValue_Update(Nullable<int> id, Nullable<int> product_id, Nullable<int> attribute_value_id, Nullable<int> detail_id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var product_idParameter = product_id.HasValue ?
                new ObjectParameter("product_id", product_id) :
                new ObjectParameter("product_id", typeof(int));
    
            var attribute_value_idParameter = attribute_value_id.HasValue ?
                new ObjectParameter("attribute_value_id", attribute_value_id) :
                new ObjectParameter("attribute_value_id", typeof(int));
    
            var detail_idParameter = detail_id.HasValue ?
                new ObjectParameter("detail_id", detail_id) :
                new ObjectParameter("detail_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NSP_TNtlProductAttributeValue_Update", idParameter, product_idParameter, attribute_value_idParameter, detail_idParameter);
        }
    
        public virtual int NSP_TNtlProductCategory_Delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NSP_TNtlProductCategory_Delete", idParameter);
        }
    
        public virtual int NSP_TNtlProductCategory_Insert(string name)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NSP_TNtlProductCategory_Insert", nameParameter);
        }
    
        public virtual int NSP_TNtlProductCategory_Update(Nullable<int> id, string name)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NSP_TNtlProductCategory_Update", idParameter, nameParameter);
        }
    
        public virtual int NSP_TNtlProductComponent_Delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NSP_TNtlProductComponent_Delete", idParameter);
        }
    
        public virtual int NSP_TNtlProductComponent_Insert(Nullable<int> master_product_id, Nullable<int> sub_product_id, Nullable<int> quantity, string remarks, Nullable<int> detail_id)
        {
            var master_product_idParameter = master_product_id.HasValue ?
                new ObjectParameter("master_product_id", master_product_id) :
                new ObjectParameter("master_product_id", typeof(int));
    
            var sub_product_idParameter = sub_product_id.HasValue ?
                new ObjectParameter("sub_product_id", sub_product_id) :
                new ObjectParameter("sub_product_id", typeof(int));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("quantity", quantity) :
                new ObjectParameter("quantity", typeof(int));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("remarks", remarks) :
                new ObjectParameter("remarks", typeof(string));
    
            var detail_idParameter = detail_id.HasValue ?
                new ObjectParameter("detail_id", detail_id) :
                new ObjectParameter("detail_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NSP_TNtlProductComponent_Insert", master_product_idParameter, sub_product_idParameter, quantityParameter, remarksParameter, detail_idParameter);
        }
    
        public virtual int NSP_TNtlProductComponent_Update(Nullable<int> id, Nullable<int> master_product_id, Nullable<int> sub_product_id, Nullable<int> quantity, string remarks, Nullable<int> detail_id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var master_product_idParameter = master_product_id.HasValue ?
                new ObjectParameter("master_product_id", master_product_id) :
                new ObjectParameter("master_product_id", typeof(int));
    
            var sub_product_idParameter = sub_product_id.HasValue ?
                new ObjectParameter("sub_product_id", sub_product_id) :
                new ObjectParameter("sub_product_id", typeof(int));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("quantity", quantity) :
                new ObjectParameter("quantity", typeof(int));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("remarks", remarks) :
                new ObjectParameter("remarks", typeof(string));
    
            var detail_idParameter = detail_id.HasValue ?
                new ObjectParameter("detail_id", detail_id) :
                new ObjectParameter("detail_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NSP_TNtlProductComponent_Update", idParameter, master_product_idParameter, sub_product_idParameter, quantityParameter, remarksParameter, detail_idParameter);
        }
    
        public virtual int NSP_TNtlProduction_Delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NSP_TNtlProduction_Delete", idParameter);
        }
    
        public virtual int NSP_TNtlProduction_Insert(string title, string code, string description, string staff_name, Nullable<System.DateTime> created_date, Nullable<decimal> total_usage, Nullable<int> status_id, string remark, Nullable<int> detail_id)
        {
            var titleParameter = title != null ?
                new ObjectParameter("title", title) :
                new ObjectParameter("title", typeof(string));
    
            var codeParameter = code != null ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("description", description) :
                new ObjectParameter("description", typeof(string));
    
            var staff_nameParameter = staff_name != null ?
                new ObjectParameter("staff_name", staff_name) :
                new ObjectParameter("staff_name", typeof(string));
    
            var created_dateParameter = created_date.HasValue ?
                new ObjectParameter("created_date", created_date) :
                new ObjectParameter("created_date", typeof(System.DateTime));
    
            var total_usageParameter = total_usage.HasValue ?
                new ObjectParameter("total_usage", total_usage) :
                new ObjectParameter("total_usage", typeof(decimal));
    
            var status_idParameter = status_id.HasValue ?
                new ObjectParameter("status_id", status_id) :
                new ObjectParameter("status_id", typeof(int));
    
            var remarkParameter = remark != null ?
                new ObjectParameter("remark", remark) :
                new ObjectParameter("remark", typeof(string));
    
            var detail_idParameter = detail_id.HasValue ?
                new ObjectParameter("detail_id", detail_id) :
                new ObjectParameter("detail_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NSP_TNtlProduction_Insert", titleParameter, codeParameter, descriptionParameter, staff_nameParameter, created_dateParameter, total_usageParameter, status_idParameter, remarkParameter, detail_idParameter);
        }
    
        public virtual int NSP_TNtlProduction_Update(Nullable<int> id, string title, string code, string description, string staff_name, Nullable<System.DateTime> created_date, Nullable<decimal> total_usage, Nullable<int> status_id, string remark, Nullable<int> detail_id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var titleParameter = title != null ?
                new ObjectParameter("title", title) :
                new ObjectParameter("title", typeof(string));
    
            var codeParameter = code != null ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("description", description) :
                new ObjectParameter("description", typeof(string));
    
            var staff_nameParameter = staff_name != null ?
                new ObjectParameter("staff_name", staff_name) :
                new ObjectParameter("staff_name", typeof(string));
    
            var created_dateParameter = created_date.HasValue ?
                new ObjectParameter("created_date", created_date) :
                new ObjectParameter("created_date", typeof(System.DateTime));
    
            var total_usageParameter = total_usage.HasValue ?
                new ObjectParameter("total_usage", total_usage) :
                new ObjectParameter("total_usage", typeof(decimal));
    
            var status_idParameter = status_id.HasValue ?
                new ObjectParameter("status_id", status_id) :
                new ObjectParameter("status_id", typeof(int));
    
            var remarkParameter = remark != null ?
                new ObjectParameter("remark", remark) :
                new ObjectParameter("remark", typeof(string));
    
            var detail_idParameter = detail_id.HasValue ?
                new ObjectParameter("detail_id", detail_id) :
                new ObjectParameter("detail_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NSP_TNtlProduction_Update", idParameter, titleParameter, codeParameter, descriptionParameter, staff_nameParameter, created_dateParameter, total_usageParameter, status_idParameter, remarkParameter, detail_idParameter);
        }
    
        public virtual int NSP_TNtlProductionItem_Delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NSP_TNtlProductionItem_Delete", idParameter);
        }
    
        public virtual int NSP_TNtlProductionItem_Insert(Nullable<int> product_id, Nullable<int> uom_id, Nullable<decimal> quantity, Nullable<System.DateTime> manufactured_date, Nullable<System.DateTime> expiry_date, Nullable<int> production_id, string remarks, Nullable<int> detail_id)
        {
            var product_idParameter = product_id.HasValue ?
                new ObjectParameter("product_id", product_id) :
                new ObjectParameter("product_id", typeof(int));
    
            var uom_idParameter = uom_id.HasValue ?
                new ObjectParameter("uom_id", uom_id) :
                new ObjectParameter("uom_id", typeof(int));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("quantity", quantity) :
                new ObjectParameter("quantity", typeof(decimal));
    
            var manufactured_dateParameter = manufactured_date.HasValue ?
                new ObjectParameter("manufactured_date", manufactured_date) :
                new ObjectParameter("manufactured_date", typeof(System.DateTime));
    
            var expiry_dateParameter = expiry_date.HasValue ?
                new ObjectParameter("expiry_date", expiry_date) :
                new ObjectParameter("expiry_date", typeof(System.DateTime));
    
            var production_idParameter = production_id.HasValue ?
                new ObjectParameter("production_id", production_id) :
                new ObjectParameter("production_id", typeof(int));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("remarks", remarks) :
                new ObjectParameter("remarks", typeof(string));
    
            var detail_idParameter = detail_id.HasValue ?
                new ObjectParameter("detail_id", detail_id) :
                new ObjectParameter("detail_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NSP_TNtlProductionItem_Insert", product_idParameter, uom_idParameter, quantityParameter, manufactured_dateParameter, expiry_dateParameter, production_idParameter, remarksParameter, detail_idParameter);
        }
    
        public virtual int NSP_TNtlProductionItem_Update(Nullable<int> id, Nullable<int> product_id, Nullable<int> uom_id, Nullable<decimal> quantity, Nullable<System.DateTime> manufactured_date, Nullable<System.DateTime> expiry_date, Nullable<int> production_id, string remarks, Nullable<int> detail_id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var product_idParameter = product_id.HasValue ?
                new ObjectParameter("product_id", product_id) :
                new ObjectParameter("product_id", typeof(int));
    
            var uom_idParameter = uom_id.HasValue ?
                new ObjectParameter("uom_id", uom_id) :
                new ObjectParameter("uom_id", typeof(int));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("quantity", quantity) :
                new ObjectParameter("quantity", typeof(decimal));
    
            var manufactured_dateParameter = manufactured_date.HasValue ?
                new ObjectParameter("manufactured_date", manufactured_date) :
                new ObjectParameter("manufactured_date", typeof(System.DateTime));
    
            var expiry_dateParameter = expiry_date.HasValue ?
                new ObjectParameter("expiry_date", expiry_date) :
                new ObjectParameter("expiry_date", typeof(System.DateTime));
    
            var production_idParameter = production_id.HasValue ?
                new ObjectParameter("production_id", production_id) :
                new ObjectParameter("production_id", typeof(int));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("remarks", remarks) :
                new ObjectParameter("remarks", typeof(string));
    
            var detail_idParameter = detail_id.HasValue ?
                new ObjectParameter("detail_id", detail_id) :
                new ObjectParameter("detail_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NSP_TNtlProductionItem_Update", idParameter, product_idParameter, uom_idParameter, quantityParameter, manufactured_dateParameter, expiry_dateParameter, production_idParameter, remarksParameter, detail_idParameter);
        }
    
        public virtual int NSP_TNtlProductSubCategory_Delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NSP_TNtlProductSubCategory_Delete", idParameter);
        }
    
        public virtual int NSP_TNtlProductSubCategory_Insert(string name, Nullable<int> product_category_id)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var product_category_idParameter = product_category_id.HasValue ?
                new ObjectParameter("product_category_id", product_category_id) :
                new ObjectParameter("product_category_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NSP_TNtlProductSubCategory_Insert", nameParameter, product_category_idParameter);
        }
    
        public virtual int NSP_TNtlProductSubCategory_Update(Nullable<int> id, string name, Nullable<int> product_category_id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var product_category_idParameter = product_category_id.HasValue ?
                new ObjectParameter("product_category_id", product_category_id) :
                new ObjectParameter("product_category_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NSP_TNtlProductSubCategory_Update", idParameter, nameParameter, product_category_idParameter);
        }
    
        public virtual int NSP_TNtlRole_Delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NSP_TNtlRole_Delete", idParameter);
        }
    
        public virtual int NSP_TNtlRole_Insert(string name)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NSP_TNtlRole_Insert", nameParameter);
        }
    
        public virtual int NSP_TNtlRole_Update(Nullable<int> id, string name)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NSP_TNtlRole_Update", idParameter, nameParameter);
        }
    
        public virtual int NSP_TNtlRolePermission_Delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NSP_TNtlRolePermission_Delete", idParameter);
        }
    
        public virtual int NSP_TNtlRolePermission_Insert(Nullable<int> role_id, Nullable<int> permission_id)
        {
            var role_idParameter = role_id.HasValue ?
                new ObjectParameter("role_id", role_id) :
                new ObjectParameter("role_id", typeof(int));
    
            var permission_idParameter = permission_id.HasValue ?
                new ObjectParameter("permission_id", permission_id) :
                new ObjectParameter("permission_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NSP_TNtlRolePermission_Insert", role_idParameter, permission_idParameter);
        }
    
        public virtual int NSP_TNtlRolePermission_Update(Nullable<int> id, Nullable<int> role_id, Nullable<int> permission_id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var role_idParameter = role_id.HasValue ?
                new ObjectParameter("role_id", role_id) :
                new ObjectParameter("role_id", typeof(int));
    
            var permission_idParameter = permission_id.HasValue ?
                new ObjectParameter("permission_id", permission_id) :
                new ObjectParameter("permission_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NSP_TNtlRolePermission_Update", idParameter, role_idParameter, permission_idParameter);
        }
    
        public virtual int NSP_TNtlSeleniumLog_Delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NSP_TNtlSeleniumLog_Delete", idParameter);
        }
    
        public virtual int NSP_TNtlSeleniumLog_Insert(string log_name, Nullable<System.DateTime> start_date, Nullable<System.DateTime> end_date, string status, string remarks, Nullable<int> type)
        {
            var log_nameParameter = log_name != null ?
                new ObjectParameter("log_name", log_name) :
                new ObjectParameter("log_name", typeof(string));
    
            var start_dateParameter = start_date.HasValue ?
                new ObjectParameter("start_date", start_date) :
                new ObjectParameter("start_date", typeof(System.DateTime));
    
            var end_dateParameter = end_date.HasValue ?
                new ObjectParameter("end_date", end_date) :
                new ObjectParameter("end_date", typeof(System.DateTime));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("remarks", remarks) :
                new ObjectParameter("remarks", typeof(string));
    
            var typeParameter = type.HasValue ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NSP_TNtlSeleniumLog_Insert", log_nameParameter, start_dateParameter, end_dateParameter, statusParameter, remarksParameter, typeParameter);
        }
    
        public virtual int NSP_TNtlSeleniumLog_Update(Nullable<int> id, string log_name, Nullable<System.DateTime> start_date, Nullable<System.DateTime> end_date, string status, string remarks, Nullable<int> type)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var log_nameParameter = log_name != null ?
                new ObjectParameter("log_name", log_name) :
                new ObjectParameter("log_name", typeof(string));
    
            var start_dateParameter = start_date.HasValue ?
                new ObjectParameter("start_date", start_date) :
                new ObjectParameter("start_date", typeof(System.DateTime));
    
            var end_dateParameter = end_date.HasValue ?
                new ObjectParameter("end_date", end_date) :
                new ObjectParameter("end_date", typeof(System.DateTime));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("remarks", remarks) :
                new ObjectParameter("remarks", typeof(string));
    
            var typeParameter = type.HasValue ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NSP_TNtlSeleniumLog_Update", idParameter, log_nameParameter, start_dateParameter, end_dateParameter, statusParameter, remarksParameter, typeParameter);
        }
    
        public virtual int NSP_TNtlShipment_Delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NSP_TNtlShipment_Delete", idParameter);
        }
    
        public virtual int NSP_TNtlShipment_Insert(string start_address_line_1, string start_address_line_2, string start_city, string start_state, Nullable<int> start_zip_code, string start_country, string dest_address_line_1, string dest_address_line_2, string dest_city, string dest_state, Nullable<int> dest_zip_code, string dest_country, string tracking_no, Nullable<System.DateTime> created_date, Nullable<System.DateTime> expected_date, Nullable<System.DateTime> due_date, Nullable<int> invoice_id, Nullable<int> carrier_id, Nullable<int> status_id, string remark, Nullable<int> detail_id)
        {
            var start_address_line_1Parameter = start_address_line_1 != null ?
                new ObjectParameter("start_address_line_1", start_address_line_1) :
                new ObjectParameter("start_address_line_1", typeof(string));
    
            var start_address_line_2Parameter = start_address_line_2 != null ?
                new ObjectParameter("start_address_line_2", start_address_line_2) :
                new ObjectParameter("start_address_line_2", typeof(string));
    
            var start_cityParameter = start_city != null ?
                new ObjectParameter("start_city", start_city) :
                new ObjectParameter("start_city", typeof(string));
    
            var start_stateParameter = start_state != null ?
                new ObjectParameter("start_state", start_state) :
                new ObjectParameter("start_state", typeof(string));
    
            var start_zip_codeParameter = start_zip_code.HasValue ?
                new ObjectParameter("start_zip_code", start_zip_code) :
                new ObjectParameter("start_zip_code", typeof(int));
    
            var start_countryParameter = start_country != null ?
                new ObjectParameter("start_country", start_country) :
                new ObjectParameter("start_country", typeof(string));
    
            var dest_address_line_1Parameter = dest_address_line_1 != null ?
                new ObjectParameter("dest_address_line_1", dest_address_line_1) :
                new ObjectParameter("dest_address_line_1", typeof(string));
    
            var dest_address_line_2Parameter = dest_address_line_2 != null ?
                new ObjectParameter("dest_address_line_2", dest_address_line_2) :
                new ObjectParameter("dest_address_line_2", typeof(string));
    
            var dest_cityParameter = dest_city != null ?
                new ObjectParameter("dest_city", dest_city) :
                new ObjectParameter("dest_city", typeof(string));
    
            var dest_stateParameter = dest_state != null ?
                new ObjectParameter("dest_state", dest_state) :
                new ObjectParameter("dest_state", typeof(string));
    
            var dest_zip_codeParameter = dest_zip_code.HasValue ?
                new ObjectParameter("dest_zip_code", dest_zip_code) :
                new ObjectParameter("dest_zip_code", typeof(int));
    
            var dest_countryParameter = dest_country != null ?
                new ObjectParameter("dest_country", dest_country) :
                new ObjectParameter("dest_country", typeof(string));
    
            var tracking_noParameter = tracking_no != null ?
                new ObjectParameter("tracking_no", tracking_no) :
                new ObjectParameter("tracking_no", typeof(string));
    
            var created_dateParameter = created_date.HasValue ?
                new ObjectParameter("created_date", created_date) :
                new ObjectParameter("created_date", typeof(System.DateTime));
    
            var expected_dateParameter = expected_date.HasValue ?
                new ObjectParameter("expected_date", expected_date) :
                new ObjectParameter("expected_date", typeof(System.DateTime));
    
            var due_dateParameter = due_date.HasValue ?
                new ObjectParameter("due_date", due_date) :
                new ObjectParameter("due_date", typeof(System.DateTime));
    
            var invoice_idParameter = invoice_id.HasValue ?
                new ObjectParameter("invoice_id", invoice_id) :
                new ObjectParameter("invoice_id", typeof(int));
    
            var carrier_idParameter = carrier_id.HasValue ?
                new ObjectParameter("carrier_id", carrier_id) :
                new ObjectParameter("carrier_id", typeof(int));
    
            var status_idParameter = status_id.HasValue ?
                new ObjectParameter("status_id", status_id) :
                new ObjectParameter("status_id", typeof(int));
    
            var remarkParameter = remark != null ?
                new ObjectParameter("remark", remark) :
                new ObjectParameter("remark", typeof(string));
    
            var detail_idParameter = detail_id.HasValue ?
                new ObjectParameter("detail_id", detail_id) :
                new ObjectParameter("detail_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NSP_TNtlShipment_Insert", start_address_line_1Parameter, start_address_line_2Parameter, start_cityParameter, start_stateParameter, start_zip_codeParameter, start_countryParameter, dest_address_line_1Parameter, dest_address_line_2Parameter, dest_cityParameter, dest_stateParameter, dest_zip_codeParameter, dest_countryParameter, tracking_noParameter, created_dateParameter, expected_dateParameter, due_dateParameter, invoice_idParameter, carrier_idParameter, status_idParameter, remarkParameter, detail_idParameter);
        }
    
        public virtual int NSP_TNtlShipment_Update(Nullable<int> id, string start_address_line_1, string start_address_line_2, string start_city, string start_state, Nullable<int> start_zip_code, string start_country, string dest_address_line_1, string dest_address_line_2, string dest_city, string dest_state, Nullable<int> dest_zip_code, string dest_country, string tracking_no, Nullable<System.DateTime> created_date, Nullable<System.DateTime> expected_date, Nullable<System.DateTime> due_date, Nullable<int> invoice_id, Nullable<int> carrier_id, Nullable<int> status_id, string remark, Nullable<int> detail_id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var start_address_line_1Parameter = start_address_line_1 != null ?
                new ObjectParameter("start_address_line_1", start_address_line_1) :
                new ObjectParameter("start_address_line_1", typeof(string));
    
            var start_address_line_2Parameter = start_address_line_2 != null ?
                new ObjectParameter("start_address_line_2", start_address_line_2) :
                new ObjectParameter("start_address_line_2", typeof(string));
    
            var start_cityParameter = start_city != null ?
                new ObjectParameter("start_city", start_city) :
                new ObjectParameter("start_city", typeof(string));
    
            var start_stateParameter = start_state != null ?
                new ObjectParameter("start_state", start_state) :
                new ObjectParameter("start_state", typeof(string));
    
            var start_zip_codeParameter = start_zip_code.HasValue ?
                new ObjectParameter("start_zip_code", start_zip_code) :
                new ObjectParameter("start_zip_code", typeof(int));
    
            var start_countryParameter = start_country != null ?
                new ObjectParameter("start_country", start_country) :
                new ObjectParameter("start_country", typeof(string));
    
            var dest_address_line_1Parameter = dest_address_line_1 != null ?
                new ObjectParameter("dest_address_line_1", dest_address_line_1) :
                new ObjectParameter("dest_address_line_1", typeof(string));
    
            var dest_address_line_2Parameter = dest_address_line_2 != null ?
                new ObjectParameter("dest_address_line_2", dest_address_line_2) :
                new ObjectParameter("dest_address_line_2", typeof(string));
    
            var dest_cityParameter = dest_city != null ?
                new ObjectParameter("dest_city", dest_city) :
                new ObjectParameter("dest_city", typeof(string));
    
            var dest_stateParameter = dest_state != null ?
                new ObjectParameter("dest_state", dest_state) :
                new ObjectParameter("dest_state", typeof(string));
    
            var dest_zip_codeParameter = dest_zip_code.HasValue ?
                new ObjectParameter("dest_zip_code", dest_zip_code) :
                new ObjectParameter("dest_zip_code", typeof(int));
    
            var dest_countryParameter = dest_country != null ?
                new ObjectParameter("dest_country", dest_country) :
                new ObjectParameter("dest_country", typeof(string));
    
            var tracking_noParameter = tracking_no != null ?
                new ObjectParameter("tracking_no", tracking_no) :
                new ObjectParameter("tracking_no", typeof(string));
    
            var created_dateParameter = created_date.HasValue ?
                new ObjectParameter("created_date", created_date) :
                new ObjectParameter("created_date", typeof(System.DateTime));
    
            var expected_dateParameter = expected_date.HasValue ?
                new ObjectParameter("expected_date", expected_date) :
                new ObjectParameter("expected_date", typeof(System.DateTime));
    
            var due_dateParameter = due_date.HasValue ?
                new ObjectParameter("due_date", due_date) :
                new ObjectParameter("due_date", typeof(System.DateTime));
    
            var invoice_idParameter = invoice_id.HasValue ?
                new ObjectParameter("invoice_id", invoice_id) :
                new ObjectParameter("invoice_id", typeof(int));
    
            var carrier_idParameter = carrier_id.HasValue ?
                new ObjectParameter("carrier_id", carrier_id) :
                new ObjectParameter("carrier_id", typeof(int));
    
            var status_idParameter = status_id.HasValue ?
                new ObjectParameter("status_id", status_id) :
                new ObjectParameter("status_id", typeof(int));
    
            var remarkParameter = remark != null ?
                new ObjectParameter("remark", remark) :
                new ObjectParameter("remark", typeof(string));
    
            var detail_idParameter = detail_id.HasValue ?
                new ObjectParameter("detail_id", detail_id) :
                new ObjectParameter("detail_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NSP_TNtlShipment_Update", idParameter, start_address_line_1Parameter, start_address_line_2Parameter, start_cityParameter, start_stateParameter, start_zip_codeParameter, start_countryParameter, dest_address_line_1Parameter, dest_address_line_2Parameter, dest_cityParameter, dest_stateParameter, dest_zip_codeParameter, dest_countryParameter, tracking_noParameter, created_dateParameter, expected_dateParameter, due_dateParameter, invoice_idParameter, carrier_idParameter, status_idParameter, remarkParameter, detail_idParameter);
        }
    
        public virtual int NSP_TNtlStockItem_Delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NSP_TNtlStockItem_Delete", idParameter);
        }
    
        public virtual int NSP_TNtlStockItem_Insert(string name, string description, Nullable<decimal> quantity, Nullable<int> product_id, Nullable<int> uom_id, Nullable<int> stock_warehouse_id, string remarks, Nullable<int> detail_id)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("description", description) :
                new ObjectParameter("description", typeof(string));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("quantity", quantity) :
                new ObjectParameter("quantity", typeof(decimal));
    
            var product_idParameter = product_id.HasValue ?
                new ObjectParameter("product_id", product_id) :
                new ObjectParameter("product_id", typeof(int));
    
            var uom_idParameter = uom_id.HasValue ?
                new ObjectParameter("uom_id", uom_id) :
                new ObjectParameter("uom_id", typeof(int));
    
            var stock_warehouse_idParameter = stock_warehouse_id.HasValue ?
                new ObjectParameter("stock_warehouse_id", stock_warehouse_id) :
                new ObjectParameter("stock_warehouse_id", typeof(int));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("remarks", remarks) :
                new ObjectParameter("remarks", typeof(string));
    
            var detail_idParameter = detail_id.HasValue ?
                new ObjectParameter("detail_id", detail_id) :
                new ObjectParameter("detail_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NSP_TNtlStockItem_Insert", nameParameter, descriptionParameter, quantityParameter, product_idParameter, uom_idParameter, stock_warehouse_idParameter, remarksParameter, detail_idParameter);
        }
    
        public virtual int NSP_TNtlStockItem_Update(Nullable<int> id, string name, string description, Nullable<decimal> quantity, Nullable<int> product_id, Nullable<int> uom_id, Nullable<int> stock_warehouse_id, string remarks, Nullable<int> detail_id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("description", description) :
                new ObjectParameter("description", typeof(string));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("quantity", quantity) :
                new ObjectParameter("quantity", typeof(decimal));
    
            var product_idParameter = product_id.HasValue ?
                new ObjectParameter("product_id", product_id) :
                new ObjectParameter("product_id", typeof(int));
    
            var uom_idParameter = uom_id.HasValue ?
                new ObjectParameter("uom_id", uom_id) :
                new ObjectParameter("uom_id", typeof(int));
    
            var stock_warehouse_idParameter = stock_warehouse_id.HasValue ?
                new ObjectParameter("stock_warehouse_id", stock_warehouse_id) :
                new ObjectParameter("stock_warehouse_id", typeof(int));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("remarks", remarks) :
                new ObjectParameter("remarks", typeof(string));
    
            var detail_idParameter = detail_id.HasValue ?
                new ObjectParameter("detail_id", detail_id) :
                new ObjectParameter("detail_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NSP_TNtlStockItem_Update", idParameter, nameParameter, descriptionParameter, quantityParameter, product_idParameter, uom_idParameter, stock_warehouse_idParameter, remarksParameter, detail_idParameter);
        }
    
        public virtual int NSP_TNtlStockWarehouse_Delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NSP_TNtlStockWarehouse_Delete", idParameter);
        }
    
        public virtual int NSP_TNtlStockWarehouse_Insert(string name, string email_address, string phone_number, string address_line_1, string address_line_2, string city, string state, Nullable<int> zip_code, string country, Nullable<int> detail_id)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var email_addressParameter = email_address != null ?
                new ObjectParameter("email_address", email_address) :
                new ObjectParameter("email_address", typeof(string));
    
            var phone_numberParameter = phone_number != null ?
                new ObjectParameter("phone_number", phone_number) :
                new ObjectParameter("phone_number", typeof(string));
    
            var address_line_1Parameter = address_line_1 != null ?
                new ObjectParameter("address_line_1", address_line_1) :
                new ObjectParameter("address_line_1", typeof(string));
    
            var address_line_2Parameter = address_line_2 != null ?
                new ObjectParameter("address_line_2", address_line_2) :
                new ObjectParameter("address_line_2", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("state", state) :
                new ObjectParameter("state", typeof(string));
    
            var zip_codeParameter = zip_code.HasValue ?
                new ObjectParameter("zip_code", zip_code) :
                new ObjectParameter("zip_code", typeof(int));
    
            var countryParameter = country != null ?
                new ObjectParameter("country", country) :
                new ObjectParameter("country", typeof(string));
    
            var detail_idParameter = detail_id.HasValue ?
                new ObjectParameter("detail_id", detail_id) :
                new ObjectParameter("detail_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NSP_TNtlStockWarehouse_Insert", nameParameter, email_addressParameter, phone_numberParameter, address_line_1Parameter, address_line_2Parameter, cityParameter, stateParameter, zip_codeParameter, countryParameter, detail_idParameter);
        }
    
        public virtual int NSP_TNtlStockWarehouse_Update(Nullable<int> id, string name, string email_address, string phone_number, string address_line_1, string address_line_2, string city, string state, Nullable<int> zip_code, string country, Nullable<int> detail_id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var email_addressParameter = email_address != null ?
                new ObjectParameter("email_address", email_address) :
                new ObjectParameter("email_address", typeof(string));
    
            var phone_numberParameter = phone_number != null ?
                new ObjectParameter("phone_number", phone_number) :
                new ObjectParameter("phone_number", typeof(string));
    
            var address_line_1Parameter = address_line_1 != null ?
                new ObjectParameter("address_line_1", address_line_1) :
                new ObjectParameter("address_line_1", typeof(string));
    
            var address_line_2Parameter = address_line_2 != null ?
                new ObjectParameter("address_line_2", address_line_2) :
                new ObjectParameter("address_line_2", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("state", state) :
                new ObjectParameter("state", typeof(string));
    
            var zip_codeParameter = zip_code.HasValue ?
                new ObjectParameter("zip_code", zip_code) :
                new ObjectParameter("zip_code", typeof(int));
    
            var countryParameter = country != null ?
                new ObjectParameter("country", country) :
                new ObjectParameter("country", typeof(string));
    
            var detail_idParameter = detail_id.HasValue ?
                new ObjectParameter("detail_id", detail_id) :
                new ObjectParameter("detail_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NSP_TNtlStockWarehouse_Update", idParameter, nameParameter, email_addressParameter, phone_numberParameter, address_line_1Parameter, address_line_2Parameter, cityParameter, stateParameter, zip_codeParameter, countryParameter, detail_idParameter);
        }
    
        public virtual int NSP_TNtlSupplierShipment_Delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NSP_TNtlSupplierShipment_Delete", idParameter);
        }
    
        public virtual int NSP_TNtlSupplierShipment_Insert(Nullable<System.DateTime> received_date, string supplier_tracking_id, string nTL_tracking_id, Nullable<int> supplier_id, Nullable<int> product_id, string remarks, Nullable<int> detail_id)
        {
            var received_dateParameter = received_date.HasValue ?
                new ObjectParameter("received_date", received_date) :
                new ObjectParameter("received_date", typeof(System.DateTime));
    
            var supplier_tracking_idParameter = supplier_tracking_id != null ?
                new ObjectParameter("supplier_tracking_id", supplier_tracking_id) :
                new ObjectParameter("supplier_tracking_id", typeof(string));
    
            var nTL_tracking_idParameter = nTL_tracking_id != null ?
                new ObjectParameter("NTL_tracking_id", nTL_tracking_id) :
                new ObjectParameter("NTL_tracking_id", typeof(string));
    
            var supplier_idParameter = supplier_id.HasValue ?
                new ObjectParameter("supplier_id", supplier_id) :
                new ObjectParameter("supplier_id", typeof(int));
    
            var product_idParameter = product_id.HasValue ?
                new ObjectParameter("product_id", product_id) :
                new ObjectParameter("product_id", typeof(int));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("remarks", remarks) :
                new ObjectParameter("remarks", typeof(string));
    
            var detail_idParameter = detail_id.HasValue ?
                new ObjectParameter("detail_id", detail_id) :
                new ObjectParameter("detail_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NSP_TNtlSupplierShipment_Insert", received_dateParameter, supplier_tracking_idParameter, nTL_tracking_idParameter, supplier_idParameter, product_idParameter, remarksParameter, detail_idParameter);
        }
    
        public virtual int NSP_TNtlSupplierShipment_Update(Nullable<int> id, Nullable<System.DateTime> received_date, string supplier_tracking_id, string nTL_tracking_id, Nullable<int> supplier_id, Nullable<int> product_id, string remarks, Nullable<int> detail_id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var received_dateParameter = received_date.HasValue ?
                new ObjectParameter("received_date", received_date) :
                new ObjectParameter("received_date", typeof(System.DateTime));
    
            var supplier_tracking_idParameter = supplier_tracking_id != null ?
                new ObjectParameter("supplier_tracking_id", supplier_tracking_id) :
                new ObjectParameter("supplier_tracking_id", typeof(string));
    
            var nTL_tracking_idParameter = nTL_tracking_id != null ?
                new ObjectParameter("NTL_tracking_id", nTL_tracking_id) :
                new ObjectParameter("NTL_tracking_id", typeof(string));
    
            var supplier_idParameter = supplier_id.HasValue ?
                new ObjectParameter("supplier_id", supplier_id) :
                new ObjectParameter("supplier_id", typeof(int));
    
            var product_idParameter = product_id.HasValue ?
                new ObjectParameter("product_id", product_id) :
                new ObjectParameter("product_id", typeof(int));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("remarks", remarks) :
                new ObjectParameter("remarks", typeof(string));
    
            var detail_idParameter = detail_id.HasValue ?
                new ObjectParameter("detail_id", detail_id) :
                new ObjectParameter("detail_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NSP_TNtlSupplierShipment_Update", idParameter, received_dateParameter, supplier_tracking_idParameter, nTL_tracking_idParameter, supplier_idParameter, product_idParameter, remarksParameter, detail_idParameter);
        }
    
        public virtual int NSP_TNtlUom_Delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NSP_TNtlUom_Delete", idParameter);
        }
    
        public virtual int NSP_TNtlUom_Insert(string name, Nullable<int> detail_id)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var detail_idParameter = detail_id.HasValue ?
                new ObjectParameter("detail_id", detail_id) :
                new ObjectParameter("detail_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NSP_TNtlUom_Insert", nameParameter, detail_idParameter);
        }
    
        public virtual int NSP_TNtlUom_Update(Nullable<int> id, string name, Nullable<int> detail_id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var detail_idParameter = detail_id.HasValue ?
                new ObjectParameter("detail_id", detail_id) :
                new ObjectParameter("detail_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NSP_TNtlUom_Update", idParameter, nameParameter, detail_idParameter);
        }
    
        public virtual int NSP_TNtlUser_Delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NSP_TNtlUser_Delete", idParameter);
        }
    
        public virtual int NSP_TNtlUser_Insert(string username, string password, string email_address)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            var email_addressParameter = email_address != null ?
                new ObjectParameter("email_address", email_address) :
                new ObjectParameter("email_address", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NSP_TNtlUser_Insert", usernameParameter, passwordParameter, email_addressParameter);
        }
    
        public virtual int NSP_TNtlUser_Update(Nullable<int> id, string username, string password, string email_address)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            var email_addressParameter = email_address != null ?
                new ObjectParameter("email_address", email_address) :
                new ObjectParameter("email_address", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NSP_TNtlUser_Update", idParameter, usernameParameter, passwordParameter, email_addressParameter);
        }
    
        public virtual int NSP_TNtlUserRole_Delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NSP_TNtlUserRole_Delete", idParameter);
        }
    
        public virtual int NSP_TNtlUserRole_Insert(Nullable<int> user_id, Nullable<int> role_id)
        {
            var user_idParameter = user_id.HasValue ?
                new ObjectParameter("user_id", user_id) :
                new ObjectParameter("user_id", typeof(int));
    
            var role_idParameter = role_id.HasValue ?
                new ObjectParameter("role_id", role_id) :
                new ObjectParameter("role_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NSP_TNtlUserRole_Insert", user_idParameter, role_idParameter);
        }
    
        public virtual int NSP_TNtlUserRole_Update(Nullable<int> id, Nullable<int> user_id, Nullable<int> role_id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var user_idParameter = user_id.HasValue ?
                new ObjectParameter("user_id", user_id) :
                new ObjectParameter("user_id", typeof(int));
    
            var role_idParameter = role_id.HasValue ?
                new ObjectParameter("role_id", role_id) :
                new ObjectParameter("role_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NSP_TNtlUserRole_Update", idParameter, user_idParameter, role_idParameter);
        }
    
        public virtual int NSP_TNtlStatus_Delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NSP_TNtlStatus_Delete", idParameter);
        }
    
        public virtual int NSP_TNtlStatus_Insert(string name, string type, Nullable<int> detail_id)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            var detail_idParameter = detail_id.HasValue ?
                new ObjectParameter("detail_id", detail_id) :
                new ObjectParameter("detail_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NSP_TNtlStatus_Insert", nameParameter, typeParameter, detail_idParameter);
        }
    
        public virtual int NSP_TNtlStatus_Update(Nullable<int> id, string name, string type, Nullable<int> detail_id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            var detail_idParameter = detail_id.HasValue ?
                new ObjectParameter("detail_id", detail_id) :
                new ObjectParameter("detail_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NSP_TNtlStatus_Update", idParameter, nameParameter, typeParameter, detail_idParameter);
        }
    
        public virtual int NSP_TNtlCustomerChat_Delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NSP_TNtlCustomerChat_Delete", idParameter);
        }
    
        public virtual int NSP_TNtlCustomerChat_Insert(string message, Nullable<System.DateTime> created_date, string msg_type, string sender_type, Nullable<int> customer_id, Nullable<int> user_id, Nullable<int> status_id, Nullable<int> platform_id)
        {
            var messageParameter = message != null ?
                new ObjectParameter("message", message) :
                new ObjectParameter("message", typeof(string));
    
            var created_dateParameter = created_date.HasValue ?
                new ObjectParameter("created_date", created_date) :
                new ObjectParameter("created_date", typeof(System.DateTime));
    
            var msg_typeParameter = msg_type != null ?
                new ObjectParameter("msg_type", msg_type) :
                new ObjectParameter("msg_type", typeof(string));
    
            var sender_typeParameter = sender_type != null ?
                new ObjectParameter("sender_type", sender_type) :
                new ObjectParameter("sender_type", typeof(string));
    
            var customer_idParameter = customer_id.HasValue ?
                new ObjectParameter("customer_id", customer_id) :
                new ObjectParameter("customer_id", typeof(int));
    
            var user_idParameter = user_id.HasValue ?
                new ObjectParameter("user_id", user_id) :
                new ObjectParameter("user_id", typeof(int));
    
            var status_idParameter = status_id.HasValue ?
                new ObjectParameter("status_id", status_id) :
                new ObjectParameter("status_id", typeof(int));
    
            var platform_idParameter = platform_id.HasValue ?
                new ObjectParameter("platform_id", platform_id) :
                new ObjectParameter("platform_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NSP_TNtlCustomerChat_Insert", messageParameter, created_dateParameter, msg_typeParameter, sender_typeParameter, customer_idParameter, user_idParameter, status_idParameter, platform_idParameter);
        }
    
        public virtual int NSP_TNtlCustomerChat_Update(Nullable<int> id, string message, Nullable<System.DateTime> created_date, string msg_type, string sender_type, Nullable<int> customer_id, Nullable<int> user_id, Nullable<int> status_id, Nullable<int> platform_id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var messageParameter = message != null ?
                new ObjectParameter("message", message) :
                new ObjectParameter("message", typeof(string));
    
            var created_dateParameter = created_date.HasValue ?
                new ObjectParameter("created_date", created_date) :
                new ObjectParameter("created_date", typeof(System.DateTime));
    
            var msg_typeParameter = msg_type != null ?
                new ObjectParameter("msg_type", msg_type) :
                new ObjectParameter("msg_type", typeof(string));
    
            var sender_typeParameter = sender_type != null ?
                new ObjectParameter("sender_type", sender_type) :
                new ObjectParameter("sender_type", typeof(string));
    
            var customer_idParameter = customer_id.HasValue ?
                new ObjectParameter("customer_id", customer_id) :
                new ObjectParameter("customer_id", typeof(int));
    
            var user_idParameter = user_id.HasValue ?
                new ObjectParameter("user_id", user_id) :
                new ObjectParameter("user_id", typeof(int));
    
            var status_idParameter = status_id.HasValue ?
                new ObjectParameter("status_id", status_id) :
                new ObjectParameter("status_id", typeof(int));
    
            var platform_idParameter = platform_id.HasValue ?
                new ObjectParameter("platform_id", platform_id) :
                new ObjectParameter("platform_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NSP_TNtlCustomerChat_Update", idParameter, messageParameter, created_dateParameter, msg_typeParameter, sender_typeParameter, customer_idParameter, user_idParameter, status_idParameter, platform_idParameter);
        }
    
        public virtual int NSP_TNtlJobOrder_Delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NSP_TNtlJobOrder_Delete", idParameter);
        }
    
        public virtual int NSP_TNtlJobOrder_Insert(string name, string code, Nullable<System.DateTime> created_date, string client_order_ref, Nullable<decimal> sub_total_price, Nullable<decimal> discount_fee, Nullable<decimal> tax_price, Nullable<decimal> total_price, Nullable<int> customer_id, string customer_name, string customer_street, string customer_street2, Nullable<int> customer_zip_code, string customer_city, string customer_state, string customer_country, Nullable<int> odoo_sales_id, Nullable<int> odoo_status_id, Nullable<int> status_id, Nullable<int> batch_id, Nullable<int> detail_id)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var codeParameter = code != null ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(string));
    
            var created_dateParameter = created_date.HasValue ?
                new ObjectParameter("created_date", created_date) :
                new ObjectParameter("created_date", typeof(System.DateTime));
    
            var client_order_refParameter = client_order_ref != null ?
                new ObjectParameter("client_order_ref", client_order_ref) :
                new ObjectParameter("client_order_ref", typeof(string));
    
            var sub_total_priceParameter = sub_total_price.HasValue ?
                new ObjectParameter("sub_total_price", sub_total_price) :
                new ObjectParameter("sub_total_price", typeof(decimal));
    
            var discount_feeParameter = discount_fee.HasValue ?
                new ObjectParameter("discount_fee", discount_fee) :
                new ObjectParameter("discount_fee", typeof(decimal));
    
            var tax_priceParameter = tax_price.HasValue ?
                new ObjectParameter("tax_price", tax_price) :
                new ObjectParameter("tax_price", typeof(decimal));
    
            var total_priceParameter = total_price.HasValue ?
                new ObjectParameter("total_price", total_price) :
                new ObjectParameter("total_price", typeof(decimal));
    
            var customer_idParameter = customer_id.HasValue ?
                new ObjectParameter("customer_id", customer_id) :
                new ObjectParameter("customer_id", typeof(int));
    
            var customer_nameParameter = customer_name != null ?
                new ObjectParameter("customer_name", customer_name) :
                new ObjectParameter("customer_name", typeof(string));
    
            var customer_streetParameter = customer_street != null ?
                new ObjectParameter("customer_street", customer_street) :
                new ObjectParameter("customer_street", typeof(string));
    
            var customer_street2Parameter = customer_street2 != null ?
                new ObjectParameter("customer_street2", customer_street2) :
                new ObjectParameter("customer_street2", typeof(string));
    
            var customer_zip_codeParameter = customer_zip_code.HasValue ?
                new ObjectParameter("customer_zip_code", customer_zip_code) :
                new ObjectParameter("customer_zip_code", typeof(int));
    
            var customer_cityParameter = customer_city != null ?
                new ObjectParameter("customer_city", customer_city) :
                new ObjectParameter("customer_city", typeof(string));
    
            var customer_stateParameter = customer_state != null ?
                new ObjectParameter("customer_state", customer_state) :
                new ObjectParameter("customer_state", typeof(string));
    
            var customer_countryParameter = customer_country != null ?
                new ObjectParameter("customer_country", customer_country) :
                new ObjectParameter("customer_country", typeof(string));
    
            var odoo_sales_idParameter = odoo_sales_id.HasValue ?
                new ObjectParameter("odoo_sales_id", odoo_sales_id) :
                new ObjectParameter("odoo_sales_id", typeof(int));
    
            var odoo_status_idParameter = odoo_status_id.HasValue ?
                new ObjectParameter("odoo_status_id", odoo_status_id) :
                new ObjectParameter("odoo_status_id", typeof(int));
    
            var status_idParameter = status_id.HasValue ?
                new ObjectParameter("status_id", status_id) :
                new ObjectParameter("status_id", typeof(int));
    
            var batch_idParameter = batch_id.HasValue ?
                new ObjectParameter("batch_id", batch_id) :
                new ObjectParameter("batch_id", typeof(int));
    
            var detail_idParameter = detail_id.HasValue ?
                new ObjectParameter("detail_id", detail_id) :
                new ObjectParameter("detail_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NSP_TNtlJobOrder_Insert", nameParameter, codeParameter, created_dateParameter, client_order_refParameter, sub_total_priceParameter, discount_feeParameter, tax_priceParameter, total_priceParameter, customer_idParameter, customer_nameParameter, customer_streetParameter, customer_street2Parameter, customer_zip_codeParameter, customer_cityParameter, customer_stateParameter, customer_countryParameter, odoo_sales_idParameter, odoo_status_idParameter, status_idParameter, batch_idParameter, detail_idParameter);
        }
    
        public virtual int NSP_TNtlJobOrder_Update(Nullable<int> id, string name, string code, Nullable<System.DateTime> created_date, string client_order_ref, Nullable<decimal> sub_total_price, Nullable<decimal> discount_fee, Nullable<decimal> tax_price, Nullable<decimal> total_price, Nullable<int> customer_id, string customer_name, string customer_street, string customer_street2, Nullable<int> customer_zip_code, string customer_city, string customer_state, string customer_country, Nullable<int> odoo_sales_id, Nullable<int> odoo_status_id, Nullable<int> status_id, Nullable<int> batch_id, Nullable<int> detail_id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var codeParameter = code != null ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(string));
    
            var created_dateParameter = created_date.HasValue ?
                new ObjectParameter("created_date", created_date) :
                new ObjectParameter("created_date", typeof(System.DateTime));
    
            var client_order_refParameter = client_order_ref != null ?
                new ObjectParameter("client_order_ref", client_order_ref) :
                new ObjectParameter("client_order_ref", typeof(string));
    
            var sub_total_priceParameter = sub_total_price.HasValue ?
                new ObjectParameter("sub_total_price", sub_total_price) :
                new ObjectParameter("sub_total_price", typeof(decimal));
    
            var discount_feeParameter = discount_fee.HasValue ?
                new ObjectParameter("discount_fee", discount_fee) :
                new ObjectParameter("discount_fee", typeof(decimal));
    
            var tax_priceParameter = tax_price.HasValue ?
                new ObjectParameter("tax_price", tax_price) :
                new ObjectParameter("tax_price", typeof(decimal));
    
            var total_priceParameter = total_price.HasValue ?
                new ObjectParameter("total_price", total_price) :
                new ObjectParameter("total_price", typeof(decimal));
    
            var customer_idParameter = customer_id.HasValue ?
                new ObjectParameter("customer_id", customer_id) :
                new ObjectParameter("customer_id", typeof(int));
    
            var customer_nameParameter = customer_name != null ?
                new ObjectParameter("customer_name", customer_name) :
                new ObjectParameter("customer_name", typeof(string));
    
            var customer_streetParameter = customer_street != null ?
                new ObjectParameter("customer_street", customer_street) :
                new ObjectParameter("customer_street", typeof(string));
    
            var customer_street2Parameter = customer_street2 != null ?
                new ObjectParameter("customer_street2", customer_street2) :
                new ObjectParameter("customer_street2", typeof(string));
    
            var customer_zip_codeParameter = customer_zip_code.HasValue ?
                new ObjectParameter("customer_zip_code", customer_zip_code) :
                new ObjectParameter("customer_zip_code", typeof(int));
    
            var customer_cityParameter = customer_city != null ?
                new ObjectParameter("customer_city", customer_city) :
                new ObjectParameter("customer_city", typeof(string));
    
            var customer_stateParameter = customer_state != null ?
                new ObjectParameter("customer_state", customer_state) :
                new ObjectParameter("customer_state", typeof(string));
    
            var customer_countryParameter = customer_country != null ?
                new ObjectParameter("customer_country", customer_country) :
                new ObjectParameter("customer_country", typeof(string));
    
            var odoo_sales_idParameter = odoo_sales_id.HasValue ?
                new ObjectParameter("odoo_sales_id", odoo_sales_id) :
                new ObjectParameter("odoo_sales_id", typeof(int));
    
            var odoo_status_idParameter = odoo_status_id.HasValue ?
                new ObjectParameter("odoo_status_id", odoo_status_id) :
                new ObjectParameter("odoo_status_id", typeof(int));
    
            var status_idParameter = status_id.HasValue ?
                new ObjectParameter("status_id", status_id) :
                new ObjectParameter("status_id", typeof(int));
    
            var batch_idParameter = batch_id.HasValue ?
                new ObjectParameter("batch_id", batch_id) :
                new ObjectParameter("batch_id", typeof(int));
    
            var detail_idParameter = detail_id.HasValue ?
                new ObjectParameter("detail_id", detail_id) :
                new ObjectParameter("detail_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NSP_TNtlJobOrder_Update", idParameter, nameParameter, codeParameter, created_dateParameter, client_order_refParameter, sub_total_priceParameter, discount_feeParameter, tax_priceParameter, total_priceParameter, customer_idParameter, customer_nameParameter, customer_streetParameter, customer_street2Parameter, customer_zip_codeParameter, customer_cityParameter, customer_stateParameter, customer_countryParameter, odoo_sales_idParameter, odoo_status_idParameter, status_idParameter, batch_idParameter, detail_idParameter);
        }
    
        public virtual int NSP_TNtlOrder_Delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NSP_TNtlOrder_Delete", idParameter);
        }
    
        public virtual int NSP_TNtlOrder_Insert(string name, string code, Nullable<decimal> sub_total_price, Nullable<decimal> tax_price, Nullable<decimal> discount_fee, Nullable<decimal> total_price, string voucher_no, Nullable<int> odoo_sales_id, string odoo_sales_no, string external_ref_no, Nullable<int> odoo_status_id, Nullable<int> status_id, Nullable<int> customer_id, string created_by, Nullable<System.DateTime> created_date, string last_updated_by, Nullable<System.DateTime> last_updated_date, string remark, Nullable<int> detail_id)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var codeParameter = code != null ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(string));
    
            var sub_total_priceParameter = sub_total_price.HasValue ?
                new ObjectParameter("sub_total_price", sub_total_price) :
                new ObjectParameter("sub_total_price", typeof(decimal));
    
            var tax_priceParameter = tax_price.HasValue ?
                new ObjectParameter("tax_price", tax_price) :
                new ObjectParameter("tax_price", typeof(decimal));
    
            var discount_feeParameter = discount_fee.HasValue ?
                new ObjectParameter("discount_fee", discount_fee) :
                new ObjectParameter("discount_fee", typeof(decimal));
    
            var total_priceParameter = total_price.HasValue ?
                new ObjectParameter("total_price", total_price) :
                new ObjectParameter("total_price", typeof(decimal));
    
            var voucher_noParameter = voucher_no != null ?
                new ObjectParameter("voucher_no", voucher_no) :
                new ObjectParameter("voucher_no", typeof(string));
    
            var odoo_sales_idParameter = odoo_sales_id.HasValue ?
                new ObjectParameter("odoo_sales_id", odoo_sales_id) :
                new ObjectParameter("odoo_sales_id", typeof(int));
    
            var odoo_sales_noParameter = odoo_sales_no != null ?
                new ObjectParameter("odoo_sales_no", odoo_sales_no) :
                new ObjectParameter("odoo_sales_no", typeof(string));
    
            var external_ref_noParameter = external_ref_no != null ?
                new ObjectParameter("external_ref_no", external_ref_no) :
                new ObjectParameter("external_ref_no", typeof(string));
    
            var odoo_status_idParameter = odoo_status_id.HasValue ?
                new ObjectParameter("odoo_status_id", odoo_status_id) :
                new ObjectParameter("odoo_status_id", typeof(int));
    
            var status_idParameter = status_id.HasValue ?
                new ObjectParameter("status_id", status_id) :
                new ObjectParameter("status_id", typeof(int));
    
            var customer_idParameter = customer_id.HasValue ?
                new ObjectParameter("customer_id", customer_id) :
                new ObjectParameter("customer_id", typeof(int));
    
            var created_byParameter = created_by != null ?
                new ObjectParameter("created_by", created_by) :
                new ObjectParameter("created_by", typeof(string));
    
            var created_dateParameter = created_date.HasValue ?
                new ObjectParameter("created_date", created_date) :
                new ObjectParameter("created_date", typeof(System.DateTime));
    
            var last_updated_byParameter = last_updated_by != null ?
                new ObjectParameter("last_updated_by", last_updated_by) :
                new ObjectParameter("last_updated_by", typeof(string));
    
            var last_updated_dateParameter = last_updated_date.HasValue ?
                new ObjectParameter("last_updated_date", last_updated_date) :
                new ObjectParameter("last_updated_date", typeof(System.DateTime));
    
            var remarkParameter = remark != null ?
                new ObjectParameter("remark", remark) :
                new ObjectParameter("remark", typeof(string));
    
            var detail_idParameter = detail_id.HasValue ?
                new ObjectParameter("detail_id", detail_id) :
                new ObjectParameter("detail_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NSP_TNtlOrder_Insert", nameParameter, codeParameter, sub_total_priceParameter, tax_priceParameter, discount_feeParameter, total_priceParameter, voucher_noParameter, odoo_sales_idParameter, odoo_sales_noParameter, external_ref_noParameter, odoo_status_idParameter, status_idParameter, customer_idParameter, created_byParameter, created_dateParameter, last_updated_byParameter, last_updated_dateParameter, remarkParameter, detail_idParameter);
        }
    
        public virtual int NSP_TNtlOrder_Update(Nullable<int> id, string name, string code, Nullable<decimal> sub_total_price, Nullable<decimal> tax_price, Nullable<decimal> discount_fee, Nullable<decimal> total_price, string voucher_no, Nullable<int> odoo_sales_id, string odoo_sales_no, string external_ref_no, Nullable<int> odoo_status_id, Nullable<int> status_id, Nullable<int> customer_id, string created_by, Nullable<System.DateTime> created_date, string last_updated_by, Nullable<System.DateTime> last_updated_date, string remark, Nullable<int> detail_id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var codeParameter = code != null ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(string));
    
            var sub_total_priceParameter = sub_total_price.HasValue ?
                new ObjectParameter("sub_total_price", sub_total_price) :
                new ObjectParameter("sub_total_price", typeof(decimal));
    
            var tax_priceParameter = tax_price.HasValue ?
                new ObjectParameter("tax_price", tax_price) :
                new ObjectParameter("tax_price", typeof(decimal));
    
            var discount_feeParameter = discount_fee.HasValue ?
                new ObjectParameter("discount_fee", discount_fee) :
                new ObjectParameter("discount_fee", typeof(decimal));
    
            var total_priceParameter = total_price.HasValue ?
                new ObjectParameter("total_price", total_price) :
                new ObjectParameter("total_price", typeof(decimal));
    
            var voucher_noParameter = voucher_no != null ?
                new ObjectParameter("voucher_no", voucher_no) :
                new ObjectParameter("voucher_no", typeof(string));
    
            var odoo_sales_idParameter = odoo_sales_id.HasValue ?
                new ObjectParameter("odoo_sales_id", odoo_sales_id) :
                new ObjectParameter("odoo_sales_id", typeof(int));
    
            var odoo_sales_noParameter = odoo_sales_no != null ?
                new ObjectParameter("odoo_sales_no", odoo_sales_no) :
                new ObjectParameter("odoo_sales_no", typeof(string));
    
            var external_ref_noParameter = external_ref_no != null ?
                new ObjectParameter("external_ref_no", external_ref_no) :
                new ObjectParameter("external_ref_no", typeof(string));
    
            var odoo_status_idParameter = odoo_status_id.HasValue ?
                new ObjectParameter("odoo_status_id", odoo_status_id) :
                new ObjectParameter("odoo_status_id", typeof(int));
    
            var status_idParameter = status_id.HasValue ?
                new ObjectParameter("status_id", status_id) :
                new ObjectParameter("status_id", typeof(int));
    
            var customer_idParameter = customer_id.HasValue ?
                new ObjectParameter("customer_id", customer_id) :
                new ObjectParameter("customer_id", typeof(int));
    
            var created_byParameter = created_by != null ?
                new ObjectParameter("created_by", created_by) :
                new ObjectParameter("created_by", typeof(string));
    
            var created_dateParameter = created_date.HasValue ?
                new ObjectParameter("created_date", created_date) :
                new ObjectParameter("created_date", typeof(System.DateTime));
    
            var last_updated_byParameter = last_updated_by != null ?
                new ObjectParameter("last_updated_by", last_updated_by) :
                new ObjectParameter("last_updated_by", typeof(string));
    
            var last_updated_dateParameter = last_updated_date.HasValue ?
                new ObjectParameter("last_updated_date", last_updated_date) :
                new ObjectParameter("last_updated_date", typeof(System.DateTime));
    
            var remarkParameter = remark != null ?
                new ObjectParameter("remark", remark) :
                new ObjectParameter("remark", typeof(string));
    
            var detail_idParameter = detail_id.HasValue ?
                new ObjectParameter("detail_id", detail_id) :
                new ObjectParameter("detail_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NSP_TNtlOrder_Update", idParameter, nameParameter, codeParameter, sub_total_priceParameter, tax_priceParameter, discount_feeParameter, total_priceParameter, voucher_noParameter, odoo_sales_idParameter, odoo_sales_noParameter, external_ref_noParameter, odoo_status_idParameter, status_idParameter, customer_idParameter, created_byParameter, created_dateParameter, last_updated_byParameter, last_updated_dateParameter, remarkParameter, detail_idParameter);
        }
    
        public virtual int NSP_TNtlUnitType_Delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NSP_TNtlUnitType_Delete", idParameter);
        }
    
        public virtual int NSP_TNtlUnitType_Insert(string name, Nullable<int> detail_id)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var detail_idParameter = detail_id.HasValue ?
                new ObjectParameter("detail_id", detail_id) :
                new ObjectParameter("detail_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NSP_TNtlUnitType_Insert", nameParameter, detail_idParameter);
        }
    
        public virtual int NSP_TNtlUnitType_Update(Nullable<int> id, string name, Nullable<int> detail_id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var detail_idParameter = detail_id.HasValue ?
                new ObjectParameter("detail_id", detail_id) :
                new ObjectParameter("detail_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NSP_TNtlUnitType_Update", idParameter, nameParameter, detail_idParameter);
        }
    
        public virtual int NSP_TNtlWindow_Delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NSP_TNtlWindow_Delete", idParameter);
        }
    
        public virtual int NSP_TNtlWindow_Insert(string name, Nullable<decimal> width, Nullable<decimal> height, Nullable<decimal> length, Nullable<decimal> total_usage, Nullable<int> detail_id)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var widthParameter = width.HasValue ?
                new ObjectParameter("width", width) :
                new ObjectParameter("width", typeof(decimal));
    
            var heightParameter = height.HasValue ?
                new ObjectParameter("height", height) :
                new ObjectParameter("height", typeof(decimal));
    
            var lengthParameter = length.HasValue ?
                new ObjectParameter("length", length) :
                new ObjectParameter("length", typeof(decimal));
    
            var total_usageParameter = total_usage.HasValue ?
                new ObjectParameter("total_usage", total_usage) :
                new ObjectParameter("total_usage", typeof(decimal));
    
            var detail_idParameter = detail_id.HasValue ?
                new ObjectParameter("detail_id", detail_id) :
                new ObjectParameter("detail_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NSP_TNtlWindow_Insert", nameParameter, widthParameter, heightParameter, lengthParameter, total_usageParameter, detail_idParameter);
        }
    
        public virtual int NSP_TNtlWindow_Update(Nullable<int> id, string name, Nullable<decimal> width, Nullable<decimal> height, Nullable<decimal> length, Nullable<decimal> total_usage, Nullable<int> detail_id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var widthParameter = width.HasValue ?
                new ObjectParameter("width", width) :
                new ObjectParameter("width", typeof(decimal));
    
            var heightParameter = height.HasValue ?
                new ObjectParameter("height", height) :
                new ObjectParameter("height", typeof(decimal));
    
            var lengthParameter = length.HasValue ?
                new ObjectParameter("length", length) :
                new ObjectParameter("length", typeof(decimal));
    
            var total_usageParameter = total_usage.HasValue ?
                new ObjectParameter("total_usage", total_usage) :
                new ObjectParameter("total_usage", typeof(decimal));
    
            var detail_idParameter = detail_id.HasValue ?
                new ObjectParameter("detail_id", detail_id) :
                new ObjectParameter("detail_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NSP_TNtlWindow_Update", idParameter, nameParameter, widthParameter, heightParameter, lengthParameter, total_usageParameter, detail_idParameter);
        }
    
        public virtual int NSP_TNtlWindowUnit_Delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NSP_TNtlWindowUnit_Delete", idParameter);
        }
    
        public virtual int NSP_TNtlWindowUnit_Insert(Nullable<int> window_id, Nullable<int> unit_id, Nullable<int> quantity, Nullable<decimal> total_usage, Nullable<int> detail_id)
        {
            var window_idParameter = window_id.HasValue ?
                new ObjectParameter("window_id", window_id) :
                new ObjectParameter("window_id", typeof(int));
    
            var unit_idParameter = unit_id.HasValue ?
                new ObjectParameter("unit_id", unit_id) :
                new ObjectParameter("unit_id", typeof(int));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("quantity", quantity) :
                new ObjectParameter("quantity", typeof(int));
    
            var total_usageParameter = total_usage.HasValue ?
                new ObjectParameter("total_usage", total_usage) :
                new ObjectParameter("total_usage", typeof(decimal));
    
            var detail_idParameter = detail_id.HasValue ?
                new ObjectParameter("detail_id", detail_id) :
                new ObjectParameter("detail_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NSP_TNtlWindowUnit_Insert", window_idParameter, unit_idParameter, quantityParameter, total_usageParameter, detail_idParameter);
        }
    
        public virtual int NSP_TNtlWindowUnit_Update(Nullable<int> id, Nullable<int> window_id, Nullable<int> unit_id, Nullable<int> quantity, Nullable<decimal> total_usage, Nullable<int> detail_id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var window_idParameter = window_id.HasValue ?
                new ObjectParameter("window_id", window_id) :
                new ObjectParameter("window_id", typeof(int));
    
            var unit_idParameter = unit_id.HasValue ?
                new ObjectParameter("unit_id", unit_id) :
                new ObjectParameter("unit_id", typeof(int));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("quantity", quantity) :
                new ObjectParameter("quantity", typeof(int));
    
            var total_usageParameter = total_usage.HasValue ?
                new ObjectParameter("total_usage", total_usage) :
                new ObjectParameter("total_usage", typeof(decimal));
    
            var detail_idParameter = detail_id.HasValue ?
                new ObjectParameter("detail_id", detail_id) :
                new ObjectParameter("detail_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NSP_TNtlWindowUnit_Update", idParameter, window_idParameter, unit_idParameter, quantityParameter, total_usageParameter, detail_idParameter);
        }
    
        public virtual int NSP_TNtlUnit_Delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NSP_TNtlUnit_Delete", idParameter);
        }
    
        public virtual int NSP_TNtlUnit_Insert(string name, Nullable<int> unit_type_id, Nullable<int> master_unit_id, Nullable<int> quantity, Nullable<decimal> total_usage, Nullable<int> detail_id)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var unit_type_idParameter = unit_type_id.HasValue ?
                new ObjectParameter("unit_type_id", unit_type_id) :
                new ObjectParameter("unit_type_id", typeof(int));
    
            var master_unit_idParameter = master_unit_id.HasValue ?
                new ObjectParameter("master_unit_id", master_unit_id) :
                new ObjectParameter("master_unit_id", typeof(int));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("quantity", quantity) :
                new ObjectParameter("quantity", typeof(int));
    
            var total_usageParameter = total_usage.HasValue ?
                new ObjectParameter("total_usage", total_usage) :
                new ObjectParameter("total_usage", typeof(decimal));
    
            var detail_idParameter = detail_id.HasValue ?
                new ObjectParameter("detail_id", detail_id) :
                new ObjectParameter("detail_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NSP_TNtlUnit_Insert", nameParameter, unit_type_idParameter, master_unit_idParameter, quantityParameter, total_usageParameter, detail_idParameter);
        }
    
        public virtual int NSP_TNtlUnit_Update(Nullable<int> id, string name, Nullable<int> unit_type_id, Nullable<int> master_unit_id, Nullable<int> quantity, Nullable<decimal> total_usage, Nullable<int> detail_id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var unit_type_idParameter = unit_type_id.HasValue ?
                new ObjectParameter("unit_type_id", unit_type_id) :
                new ObjectParameter("unit_type_id", typeof(int));
    
            var master_unit_idParameter = master_unit_id.HasValue ?
                new ObjectParameter("master_unit_id", master_unit_id) :
                new ObjectParameter("master_unit_id", typeof(int));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("quantity", quantity) :
                new ObjectParameter("quantity", typeof(int));
    
            var total_usageParameter = total_usage.HasValue ?
                new ObjectParameter("total_usage", total_usage) :
                new ObjectParameter("total_usage", typeof(decimal));
    
            var detail_idParameter = detail_id.HasValue ?
                new ObjectParameter("detail_id", detail_id) :
                new ObjectParameter("detail_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NSP_TNtlUnit_Update", idParameter, nameParameter, unit_type_idParameter, master_unit_idParameter, quantityParameter, total_usageParameter, detail_idParameter);
        }
    
        public virtual int NSP_TNtlOrderItem_Delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NSP_TNtlOrderItem_Delete", idParameter);
        }
    
        public virtual int NSP_TNtlOrderItem_Insert(string name, string sku, Nullable<decimal> unit_price, Nullable<decimal> quantity, Nullable<decimal> sub_total_price, Nullable<decimal> tax_price, Nullable<decimal> discount_fee, Nullable<decimal> total_price, string voucher_no, Nullable<int> order_id, Nullable<int> product_id, Nullable<int> unit_id, Nullable<decimal> total_usage, Nullable<int> uom_id, string remark, Nullable<int> detail_id)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var skuParameter = sku != null ?
                new ObjectParameter("sku", sku) :
                new ObjectParameter("sku", typeof(string));
    
            var unit_priceParameter = unit_price.HasValue ?
                new ObjectParameter("unit_price", unit_price) :
                new ObjectParameter("unit_price", typeof(decimal));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("quantity", quantity) :
                new ObjectParameter("quantity", typeof(decimal));
    
            var sub_total_priceParameter = sub_total_price.HasValue ?
                new ObjectParameter("sub_total_price", sub_total_price) :
                new ObjectParameter("sub_total_price", typeof(decimal));
    
            var tax_priceParameter = tax_price.HasValue ?
                new ObjectParameter("tax_price", tax_price) :
                new ObjectParameter("tax_price", typeof(decimal));
    
            var discount_feeParameter = discount_fee.HasValue ?
                new ObjectParameter("discount_fee", discount_fee) :
                new ObjectParameter("discount_fee", typeof(decimal));
    
            var total_priceParameter = total_price.HasValue ?
                new ObjectParameter("total_price", total_price) :
                new ObjectParameter("total_price", typeof(decimal));
    
            var voucher_noParameter = voucher_no != null ?
                new ObjectParameter("voucher_no", voucher_no) :
                new ObjectParameter("voucher_no", typeof(string));
    
            var order_idParameter = order_id.HasValue ?
                new ObjectParameter("order_id", order_id) :
                new ObjectParameter("order_id", typeof(int));
    
            var product_idParameter = product_id.HasValue ?
                new ObjectParameter("product_id", product_id) :
                new ObjectParameter("product_id", typeof(int));
    
            var unit_idParameter = unit_id.HasValue ?
                new ObjectParameter("unit_id", unit_id) :
                new ObjectParameter("unit_id", typeof(int));
    
            var total_usageParameter = total_usage.HasValue ?
                new ObjectParameter("total_usage", total_usage) :
                new ObjectParameter("total_usage", typeof(decimal));
    
            var uom_idParameter = uom_id.HasValue ?
                new ObjectParameter("uom_id", uom_id) :
                new ObjectParameter("uom_id", typeof(int));
    
            var remarkParameter = remark != null ?
                new ObjectParameter("remark", remark) :
                new ObjectParameter("remark", typeof(string));
    
            var detail_idParameter = detail_id.HasValue ?
                new ObjectParameter("detail_id", detail_id) :
                new ObjectParameter("detail_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NSP_TNtlOrderItem_Insert", nameParameter, skuParameter, unit_priceParameter, quantityParameter, sub_total_priceParameter, tax_priceParameter, discount_feeParameter, total_priceParameter, voucher_noParameter, order_idParameter, product_idParameter, unit_idParameter, total_usageParameter, uom_idParameter, remarkParameter, detail_idParameter);
        }
    
        public virtual int NSP_TNtlOrderItem_Update(Nullable<int> id, string name, string sku, Nullable<decimal> unit_price, Nullable<decimal> quantity, Nullable<decimal> sub_total_price, Nullable<decimal> tax_price, Nullable<decimal> discount_fee, Nullable<decimal> total_price, string voucher_no, Nullable<int> order_id, Nullable<int> product_id, Nullable<int> unit_id, Nullable<decimal> total_usage, Nullable<int> uom_id, string remark, Nullable<int> detail_id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var skuParameter = sku != null ?
                new ObjectParameter("sku", sku) :
                new ObjectParameter("sku", typeof(string));
    
            var unit_priceParameter = unit_price.HasValue ?
                new ObjectParameter("unit_price", unit_price) :
                new ObjectParameter("unit_price", typeof(decimal));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("quantity", quantity) :
                new ObjectParameter("quantity", typeof(decimal));
    
            var sub_total_priceParameter = sub_total_price.HasValue ?
                new ObjectParameter("sub_total_price", sub_total_price) :
                new ObjectParameter("sub_total_price", typeof(decimal));
    
            var tax_priceParameter = tax_price.HasValue ?
                new ObjectParameter("tax_price", tax_price) :
                new ObjectParameter("tax_price", typeof(decimal));
    
            var discount_feeParameter = discount_fee.HasValue ?
                new ObjectParameter("discount_fee", discount_fee) :
                new ObjectParameter("discount_fee", typeof(decimal));
    
            var total_priceParameter = total_price.HasValue ?
                new ObjectParameter("total_price", total_price) :
                new ObjectParameter("total_price", typeof(decimal));
    
            var voucher_noParameter = voucher_no != null ?
                new ObjectParameter("voucher_no", voucher_no) :
                new ObjectParameter("voucher_no", typeof(string));
    
            var order_idParameter = order_id.HasValue ?
                new ObjectParameter("order_id", order_id) :
                new ObjectParameter("order_id", typeof(int));
    
            var product_idParameter = product_id.HasValue ?
                new ObjectParameter("product_id", product_id) :
                new ObjectParameter("product_id", typeof(int));
    
            var unit_idParameter = unit_id.HasValue ?
                new ObjectParameter("unit_id", unit_id) :
                new ObjectParameter("unit_id", typeof(int));
    
            var total_usageParameter = total_usage.HasValue ?
                new ObjectParameter("total_usage", total_usage) :
                new ObjectParameter("total_usage", typeof(decimal));
    
            var uom_idParameter = uom_id.HasValue ?
                new ObjectParameter("uom_id", uom_id) :
                new ObjectParameter("uom_id", typeof(int));
    
            var remarkParameter = remark != null ?
                new ObjectParameter("remark", remark) :
                new ObjectParameter("remark", typeof(string));
    
            var detail_idParameter = detail_id.HasValue ?
                new ObjectParameter("detail_id", detail_id) :
                new ObjectParameter("detail_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NSP_TNtlOrderItem_Update", idParameter, nameParameter, skuParameter, unit_priceParameter, quantityParameter, sub_total_priceParameter, tax_priceParameter, discount_feeParameter, total_priceParameter, voucher_noParameter, order_idParameter, product_idParameter, unit_idParameter, total_usageParameter, uom_idParameter, remarkParameter, detail_idParameter);
        }
    
        public virtual int NSP_TNtlSummaryItem_Delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NSP_TNtlSummaryItem_Delete", idParameter);
        }
    
        public virtual int NSP_TNtlSummaryItem_Insert(string name, string sku, Nullable<decimal> quantity, Nullable<decimal> used, Nullable<decimal> length, Nullable<decimal> width, Nullable<decimal> height, Nullable<System.DateTime> created_date, Nullable<System.DateTime> completed_date, Nullable<int> status_id, Nullable<int> detail_id)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var skuParameter = sku != null ?
                new ObjectParameter("sku", sku) :
                new ObjectParameter("sku", typeof(string));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("quantity", quantity) :
                new ObjectParameter("quantity", typeof(decimal));
    
            var usedParameter = used.HasValue ?
                new ObjectParameter("used", used) :
                new ObjectParameter("used", typeof(decimal));
    
            var lengthParameter = length.HasValue ?
                new ObjectParameter("length", length) :
                new ObjectParameter("length", typeof(decimal));
    
            var widthParameter = width.HasValue ?
                new ObjectParameter("width", width) :
                new ObjectParameter("width", typeof(decimal));
    
            var heightParameter = height.HasValue ?
                new ObjectParameter("height", height) :
                new ObjectParameter("height", typeof(decimal));
    
            var created_dateParameter = created_date.HasValue ?
                new ObjectParameter("created_date", created_date) :
                new ObjectParameter("created_date", typeof(System.DateTime));
    
            var completed_dateParameter = completed_date.HasValue ?
                new ObjectParameter("completed_date", completed_date) :
                new ObjectParameter("completed_date", typeof(System.DateTime));
    
            var status_idParameter = status_id.HasValue ?
                new ObjectParameter("status_id", status_id) :
                new ObjectParameter("status_id", typeof(int));
    
            var detail_idParameter = detail_id.HasValue ?
                new ObjectParameter("detail_id", detail_id) :
                new ObjectParameter("detail_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NSP_TNtlSummaryItem_Insert", nameParameter, skuParameter, quantityParameter, usedParameter, lengthParameter, widthParameter, heightParameter, created_dateParameter, completed_dateParameter, status_idParameter, detail_idParameter);
        }
    
        public virtual int NSP_TNtlSummaryItem_Update(Nullable<int> id, string name, string sku, Nullable<decimal> quantity, Nullable<decimal> used, Nullable<decimal> length, Nullable<decimal> width, Nullable<decimal> height, Nullable<System.DateTime> created_date, Nullable<System.DateTime> completed_date, Nullable<int> status_id, Nullable<int> detail_id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var skuParameter = sku != null ?
                new ObjectParameter("sku", sku) :
                new ObjectParameter("sku", typeof(string));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("quantity", quantity) :
                new ObjectParameter("quantity", typeof(decimal));
    
            var usedParameter = used.HasValue ?
                new ObjectParameter("used", used) :
                new ObjectParameter("used", typeof(decimal));
    
            var lengthParameter = length.HasValue ?
                new ObjectParameter("length", length) :
                new ObjectParameter("length", typeof(decimal));
    
            var widthParameter = width.HasValue ?
                new ObjectParameter("width", width) :
                new ObjectParameter("width", typeof(decimal));
    
            var heightParameter = height.HasValue ?
                new ObjectParameter("height", height) :
                new ObjectParameter("height", typeof(decimal));
    
            var created_dateParameter = created_date.HasValue ?
                new ObjectParameter("created_date", created_date) :
                new ObjectParameter("created_date", typeof(System.DateTime));
    
            var completed_dateParameter = completed_date.HasValue ?
                new ObjectParameter("completed_date", completed_date) :
                new ObjectParameter("completed_date", typeof(System.DateTime));
    
            var status_idParameter = status_id.HasValue ?
                new ObjectParameter("status_id", status_id) :
                new ObjectParameter("status_id", typeof(int));
    
            var detail_idParameter = detail_id.HasValue ?
                new ObjectParameter("detail_id", detail_id) :
                new ObjectParameter("detail_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NSP_TNtlSummaryItem_Update", idParameter, nameParameter, skuParameter, quantityParameter, usedParameter, lengthParameter, widthParameter, heightParameter, created_dateParameter, completed_dateParameter, status_idParameter, detail_idParameter);
        }
    }
}
