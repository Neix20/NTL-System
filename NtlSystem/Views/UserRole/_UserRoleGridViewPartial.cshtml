@using NtlSystem.Models;

@{
    dbNtlSystemEntities db = new dbNtlSystemEntities();

    var grid = Html.DevExpress().GridView(settings => {
        settings.Name = "UserRoleGridView" + ViewData["user_id"];
        settings.CallbackRouteValues = new { Controller = "UserRole", Action = "UserRoleGridViewPartial", user_id = ViewData["user_id"] };

        settings.SettingsEditing.AddNewRowRouteValues = new { Controller = "UserRole", Action = "UserRoleGridViewPartialAddNew", user_id = ViewData["user_id"] };
        settings.SettingsEditing.UpdateRowRouteValues = new { Controller = "UserRole", Action = "UserRoleGridViewPartialUpdate", user_id = ViewData["user_id"] };
        settings.SettingsEditing.DeleteRowRouteValues = new { Controller = "UserRole", Action = "UserRoleGridViewPartialDelete", user_id = ViewData["user_id"] };
        settings.SettingsEditing.Mode = GridViewEditingMode.EditFormAndDisplayRow;
        settings.SettingsBehavior.ConfirmDelete = true;

        settings.Width = Unit.Percentage(100);

        settings.CommandColumn.Visible = true;
        settings.CommandColumn.ShowNewButtonInHeader = true;
        settings.CommandColumn.ShowDeleteButton = true;
        settings.CommandColumn.ShowEditButton = true;

        settings.KeyFieldName = "id";

        settings.SettingsPager.Visible = true;
        settings.Settings.ShowGroupPanel = true;
        settings.Settings.ShowFilterRow = true;
        settings.SettingsBehavior.AllowSelectByRowClick = true;
        settings.SettingsSearchPanel.Visible = true;

        // Role ID
        settings.Columns.Add(col =>
        {
            col.FieldName = "role_id";
            col.Caption = "Role";

            col.ColumnType = MVCxGridViewColumnType.ComboBox;
            ComboBoxProperties prop = col.PropertiesEdit as ComboBoxProperties;
            prop.DataSource = db.TNtlRoles.ToList();
            prop.TextField = "name";
            prop.ValueField = "id";
            prop.ClearButton.DisplayMode = ClearButtonDisplayMode.OnHover;
            prop.ValidationSettings.RequiredField.IsRequired = true;
        });

        // Header Set Center
        settings.Styles.Header.HorizontalAlign = HorizontalAlign.Center;
        settings.Styles.Header.VerticalAlign = VerticalAlign.Middle;

        // Cell Styles Center
        settings.Styles.Cell.HorizontalAlign = HorizontalAlign.Center;
        settings.Styles.Cell.VerticalAlign = VerticalAlign.Middle;
    });

    if (ViewData["EditError"] != null){
        grid.SetEditErrorText((string)ViewData["EditError"]);
    }
}
@grid.Bind(Model).GetHtml()