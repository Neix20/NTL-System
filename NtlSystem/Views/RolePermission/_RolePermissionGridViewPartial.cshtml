@using NtlSystem.Models;
@using System.Collections.Generic;

@{
    dbNtlSystemEntities db = new dbNtlSystemEntities();

    Dictionary<int, string> detailDict = new Dictionary<int, string>();
    db.TNtlDetails.ToList().ForEach(it =>
    {
        detailDict.Add(it.id, it.last_updated_by);
    });


	var grid = Html.DevExpress().GridView(settings => {
        settings.Name = "RolePermissionGridView" + ViewData["role_id"];
        settings.CallbackRouteValues = new { Controller = "RolePermission", Action = "RolePermissionGridViewPartial", role_id = ViewData["role_id"] };

        settings.SettingsEditing.AddNewRowRouteValues = new { Controller = "RolePermission", Action = "RolePermissionGridViewPartialAddNew", role_id = ViewData["role_id"]  };
        settings.SettingsEditing.UpdateRowRouteValues = new { Controller = "RolePermission", Action = "RolePermissionGridViewPartialUpdate", role_id = ViewData["role_id"]  };
        settings.SettingsEditing.DeleteRowRouteValues = new { Controller = "RolePermission", Action = "RolePermissionGridViewPartialDelete", role_id = ViewData["role_id"]  };
        settings.SettingsEditing.Mode = GridViewEditingMode.EditFormAndDisplayRow;
        settings.SettingsBehavior.ConfirmDelete = true;

        settings.Width = Unit.Percentage(100);

        settings.CommandColumn.Visible = true;
        settings.CommandColumn.ShowNewButtonInHeader = true;
        settings.CommandColumn.ShowDeleteButton = true;
        settings.CommandColumn.ShowEditButton = true;

        settings.KeyFieldName = "id";

        settings.SettingsPager.Visible = true;
        settings.Settings.ShowGroupPanel = true;
        settings.Settings.ShowFilterRow = true;
        settings.SettingsBehavior.AllowSelectByRowClick = true;
        settings.SettingsSearchPanel.Visible = true;

        // Permission ID
        settings.Columns.Add(col =>
        {
            col.FieldName = "permission_id";
            col.Caption = "Permission";

            col.ColumnType = MVCxGridViewColumnType.ComboBox;
            ComboBoxProperties prop = col.PropertiesEdit as ComboBoxProperties;
            prop.DataSource = db.TNtlPermissions.ToList();
            prop.TextField = "name";
            prop.ValueField = "id";
            prop.ClearButton.DisplayMode = ClearButtonDisplayMode.OnHover;
            prop.ValidationSettings.RequiredField.IsRequired = true;
        });

        // Header Set Center
        settings.Styles.Header.HorizontalAlign = HorizontalAlign.Center;
        settings.Styles.Header.VerticalAlign = VerticalAlign.Middle;

        // Cell Styles Center
        settings.Styles.Cell.HorizontalAlign = HorizontalAlign.Center;
        settings.Styles.Cell.VerticalAlign = VerticalAlign.Middle;

	});

	if (ViewData["EditError"] != null){
        grid.SetEditErrorText((string)ViewData["EditError"]);
    }
}
@grid.Bind(Model).GetHtml()