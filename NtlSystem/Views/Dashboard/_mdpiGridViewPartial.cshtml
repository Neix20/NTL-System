@{
    var grid = Html.DevExpress().GridView(settings =>
    {
        settings.Name = "mdpiGridView";
        settings.CallbackRouteValues = new { Controller = "Dashboard", Action = "mdpiGridViewPartial" };

        settings.KeyFieldName = "measurement";

        settings.Width = Unit.Percentage(100);

        settings.SettingsPager.Visible = true;
        settings.Settings.ShowGroupPanel = false;
        settings.Settings.ShowFilterRow = false;
        settings.SettingsBehavior.AllowSelectByRowClick = true;

        // Show All Records
        settings.SettingsPager.PageSize = 50;

        // Measurement
        settings.Columns.Add(col =>
        {
            col.FieldName = "measurement";
            col.Caption = "Measurement";
        });

        // Black Silver
        settings.Columns.Add(col =>
        {
            col.FieldName = "black_silver";
            col.Caption = "Black Silver";

            col.ColumnType = MVCxGridViewColumnType.SpinEdit;
            SpinEditProperties prop = col.PropertiesEdit as SpinEditProperties;
            prop.NumberType = SpinEditNumberType.Float;
            prop.MinValue = 0;
            prop.MaxValue = 10000000;
            prop.Increment = 0.1M;
            prop.DisplayFormatString = "N2";

            col.EditFormSettings.Visible = DefaultBoolean.False;
        });

        // Deep Blue Silver
        settings.Columns.Add(col =>
        {
            col.FieldName = "deep_blue_silver";
            col.Caption = "Deep Blue Silver";

            col.ColumnType = MVCxGridViewColumnType.SpinEdit;
            SpinEditProperties prop = col.PropertiesEdit as SpinEditProperties;
            prop.NumberType = SpinEditNumberType.Float;
            prop.MinValue = 0;
            prop.MaxValue = 10000000;
            prop.Increment = 0.1M;
            prop.DisplayFormatString = "N2";

            col.EditFormSettings.Visible = DefaultBoolean.False;
        });

        // Gold Silver
        settings.Columns.Add(col =>
        {
            col.FieldName = "gold_silver";
            col.Caption = "Gold Silver";

            col.ColumnType = MVCxGridViewColumnType.SpinEdit;
            SpinEditProperties prop = col.PropertiesEdit as SpinEditProperties;
            prop.NumberType = SpinEditNumberType.Float;
            prop.MinValue = 0;
            prop.MaxValue = 10000000;
            prop.Increment = 0.1M;
            prop.DisplayFormatString = "N2";

            col.EditFormSettings.Visible = DefaultBoolean.False;
        });

        // Green Silver
        settings.Columns.Add(col =>
        {
            col.FieldName = "green_silver";
            col.Caption = "Green Silver";

            col.ColumnType = MVCxGridViewColumnType.SpinEdit;
            SpinEditProperties prop = col.PropertiesEdit as SpinEditProperties;
            prop.NumberType = SpinEditNumberType.Float;
            prop.MinValue = 0;
            prop.MaxValue = 10000000;
            prop.Increment = 0.1M;
            prop.DisplayFormatString = "N2";

            col.EditFormSettings.Visible = DefaultBoolean.False;
        });

        // Silver Light
        settings.Columns.Add(col =>
        {
            col.FieldName = "silver_light";
            col.Caption = "Silver Light";

            col.ColumnType = MVCxGridViewColumnType.SpinEdit;
            SpinEditProperties prop = col.PropertiesEdit as SpinEditProperties;
            prop.NumberType = SpinEditNumberType.Float;
            prop.MinValue = 0;
            prop.MaxValue = 10000000;
            prop.Increment = 0.1M;
            prop.DisplayFormatString = "N2";

            col.EditFormSettings.Visible = DefaultBoolean.False;
        });

        // Price
        settings.Columns.Add(col =>
        {
            col.FieldName = "price";
            col.Caption = "Price";

            col.ColumnType = MVCxGridViewColumnType.SpinEdit;
            SpinEditProperties prop = col.PropertiesEdit as SpinEditProperties;
            prop.NumberType = SpinEditNumberType.Float;
            prop.MinValue = 0;
            prop.MaxValue = 10000000;
            prop.Increment = 0.1M;
            prop.DisplayFormatString = "N2";

            col.EditFormSettings.Visible = DefaultBoolean.False;
        });

        // Header Set Center
        settings.Styles.Header.HorizontalAlign = HorizontalAlign.Center;
        settings.Styles.Header.VerticalAlign = VerticalAlign.Middle;

        // Cell Styles Center
        settings.Styles.Cell.HorizontalAlign = HorizontalAlign.Center;
        settings.Styles.Cell.VerticalAlign = VerticalAlign.Middle;
    });

    if (ViewData["EditError"] != null)
    {
        grid.SetEditErrorText((string)ViewData["EditError"]);
    }
}
@grid.Bind(Model).GetHtml()
