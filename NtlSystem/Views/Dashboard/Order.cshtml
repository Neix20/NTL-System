@{
    ViewBag.Title = "Dashboard Order";
    Layout = "~/Views/Shared/_NavLayout.cshtml";
}

<style>
    .bg-c-blue {
        background: linear-gradient(45deg,#4099ff,#73b4ff);
    }
    
    .bg-c-green {
        background: linear-gradient(45deg,#2ed8b6,#59e0c5);
    }
    
    .bg-c-yellow {
        background: linear-gradient(45deg,#FFB64D,#ffcb80);
    }
    
    .bg-c-pink {
        background: linear-gradient(45deg,#FF5370,#ff869a);
    }

    .center {
        display: flex;
        justify-content: center;
    }
</style>

<div class="white-box">
    <div class="row">
        <div class="col-md-3 col-xl-3">
            <div class="card bg-c-blue">
                <div class="card-body">
                    <div class="h3">Number of Sales</div>
                    <div class="text-end">
                        <div class="h4">@ViewData["numOfSale"]</div>
                    </div>
                </div>
            </div>
        </div>
    
        <div class="col-md-3 col-xl-3">
            <div class="card bg-c-yellow">
                <div class="card-body">
                    <div class="h3">Total Gross Revenue</div>
                    <div class="text-end">
                        <div class="h4">@string.Format("RM{0:0.00}", ViewData["totalRevenue"])</div>
                    </div>
                </div>
            </div>
        </div>
    
        <div class="col-md-3 col-xl-3">
            <div class="card bg-c-green">
                <div class="card-body">
                    <div class="h3">Daily Gross Revenue</div>
                    <div class="text-end">
                        <div class="h4">@string.Format("RM{0:0.00}", ViewData["dailyRevenue"])</div>
                    </div>
                </div>
            </div>
        </div>
    
        <div class="col-md-3 col-xl-3">
            <div class="card bg-c-pink">
                <div class="card-body">
                    <div class="h3">Monthly Gross Revenue</div>
                    <div class="text-end">
                        <div class="h4">@string.Format("RM{0:0.00}", ViewData["monthlyRevenue"])</div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    
    <div class="my-3">
        <div class="h3"><u>Order Chart</u></div>
    </div>
    
    <!-- Weekly Sales (Line Chart) -->
    <!-- Popular Product (Bar Chart) -->
    
    <div class="row" style="height: 400px;">
        <div class="col p-3 center" style="width: 100%">
            <div id="DashboardOrderChart" style="height: 400px; width: 600px;">
                <canvas style="height: 100%; width: 100%;"></canvas>
            </div>
        </div>
        <div class="col p-3 center" style="width: 100%">
            <div id="DashboardProductChart" style="width: 400px;">
                <canvas style="height: 100%; width: 100%;"></canvas>
            </div>
        </div>
    </div>
    
    <div class="my-3">
        <div class="h3"><u>Order Sales Table</u></div>
    </div>
    
    @Html.Action("OrderSalesTablePartial")
    
    <div class="my-3">
        <div class="h3"><u>Order Automation</u></div>
    </div>
    
    @Html.Action("dsiPartial")

</div>

<script>
    async function getCoords(link){
        let resp, data,coords;
    
        resp = await fetch(link, {
            method: "GET"
        });
        
        data = await resp.json();

        data = JSON.parse(data);

        coords = data["coords"];

        coords = JSON.parse(coords);

        return coords;
    }

    function getRandomInt(min, max) {
        min = Math.ceil(min);
        max = Math.floor(max);
        return Math.floor(Math.random() * (max - min) + min); //The maximum is exclusive and the minimum is inclusive
    }

    (async function() {
        let coords;
        
        coords = await getCoords("/Dashboard/RealTimeSalesChart");
                
        let lineCtx = document.querySelector("div[id='DashboardOrderChart'] canvas").getContext("2d");
                
        let lineChart = new Chart(lineCtx, {
            type: 'line',
            data: {
                labels: coords.map(it => it.x),
                datasets: [
                {
                    label: 'Shopee',
                    data: coords.map(it => it.y),
                    borderColor: 'rgba(255, 0, 0, 1)',
                    backgroundColor: 'rgba(255, 99, 71, 1)'
                },
                {
                    label: 'Lazada',
                    data: coords.map(it => getRandomInt(15, 99)),
                    borderColor: 'rgba(45, 85, 225, 1)',
                    backgroundColor: 'rgba(3, 138, 255, 1)'
                },
                ]
            },
            options: {
                plugins: {
                    legend: {
                        display: true,
                        position: "bottom"
                    },
                    title: {
                        display: true,
                        text: "Real Time Sales Order"
                    }
                }
            }
        });
                
        // Pie Chart
        coords = await getCoords("/Dashboard/TopProductChart");
        
        let pieCtx = document.querySelector("div[id='DashboardProductChart'] canvas").getContext("2d");
                
        let pieChart = new Chart(pieCtx, {
            type: 'doughnut',
            data: {
                labels: coords.map(it => it.x),
                datasets: [{
                    data: coords.map(it => it.y),
                    backgroundColor: ['red', 'green', 'yellow', 'blue']
                }]
            },
            options: {
                plugins: {
                    legend: {
                        display: true,
                        position: "right"
                    },
                    title: {
                        display: true,
                        text: "Top Product Sales"
                    }
                }
            }
        });

        document.querySelector("div[id='DashboardProductChart'] canvas").resize(200, 200);

    }());
</script>
